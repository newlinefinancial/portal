/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * AvailableSubs generated by hbm2java
 */
@Entity
@Table(name="`available_subs`"
    ,schema="data"
)

public class AvailableSubs  implements java.io.Serializable {

    
    private Integer id;
    
    private Date researchDate;
    
    private Integer taxYear;
    
    private Character installment;
    
    private Double inst1;
    
    private Double inst2;
    
    private Double total;
    
    private Integer lastImportId;
    
    private Double paidAfterImport;
    
    private Date datePaid;
    
    private Certificate certificate;
    
    private Property property;

    public AvailableSubs() {
    }


    @Id @GeneratedValue(strategy=IDENTITY)
    

    @Column(name="`id`", precision=10)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

    @Temporal(TemporalType.DATE)

    @Column(name="`research_date`", length=10)
    public Date getResearchDate() {
        return this.researchDate;
    }
    
    public void setResearchDate(Date researchDate) {
        this.researchDate = researchDate;
    }

    

    @Column(name="`tax_year`", precision=10)
    public Integer getTaxYear() {
        return this.taxYear;
    }
    
    public void setTaxYear(Integer taxYear) {
        this.taxYear = taxYear;
    }

    

    @Column(name="`installment`", length=1)
    public Character getInstallment() {
        return this.installment;
    }
    
    public void setInstallment(Character installment) {
        this.installment = installment;
    }

    

    @Column(name="`inst1`", scale=4)
    public Double getInst1() {
        return this.inst1;
    }
    
    public void setInst1(Double inst1) {
        this.inst1 = inst1;
    }

    

    @Column(name="`inst2`", scale=4)
    public Double getInst2() {
        return this.inst2;
    }
    
    public void setInst2(Double inst2) {
        this.inst2 = inst2;
    }

    

    @Column(name="`total`", scale=4)
    public Double getTotal() {
        return this.total;
    }
    
    public void setTotal(Double total) {
        this.total = total;
    }

    

    @Column(name="`last_import_id`", precision=10)
    public Integer getLastImportId() {
        return this.lastImportId;
    }
    
    public void setLastImportId(Integer lastImportId) {
        this.lastImportId = lastImportId;
    }

    

    @Column(name="`paid_after_import`", scale=4)
    public Double getPaidAfterImport() {
        return this.paidAfterImport;
    }
    
    public void setPaidAfterImport(Double paidAfterImport) {
        this.paidAfterImport = paidAfterImport;
    }

    @Temporal(TemporalType.DATE)

    @Column(name="`date_paid`", length=10)
    public Date getDatePaid() {
        return this.datePaid;
    }
    
    public void setDatePaid(Date datePaid) {
        this.datePaid = datePaid;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`certificate_id`")
    public Certificate getCertificate() {
        return this.certificate;
    }
    
    public void setCertificate(Certificate certificate) {
        this.certificate = certificate;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`property_id`")
    public Property getProperty() {
        return this.property;
    }
    
    public void setProperty(Property property) {
        this.property = property;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof AvailableSubs) )
		    return false;

		 AvailableSubs that = (AvailableSubs) o;

		 return ( (this.getId()==that.getId()) || ( this.getId()!=null && that.getId()!=null && this.getId().equals(that.getId()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getId() == null ? 0 : this.getId().hashCode() );

         return result;
    }


}

