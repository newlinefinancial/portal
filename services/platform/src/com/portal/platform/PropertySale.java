/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Date;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * PropertySale generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`property_sale`", schema = "data", uniqueConstraints = {
        @UniqueConstraint(columnNames = {"`property_id`", "`research_date`"})})
public class PropertySale implements Serializable {

    private int id;
    private Date researchDate;
    private String researchSource;
    private Double deedCost;
    private Boolean priorAssignment;
    private Date saleDate;
    private Double saleAmount;
    private Integer lastImportId;
    private AuctionResult auctionResult;
    private Property property;
    private Research research;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id`", nullable = false, scale = 0, precision = 10)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "`research_date`", nullable = false)
    public Date getResearchDate() {
        return this.researchDate;
    }

    public void setResearchDate(Date researchDate) {
        this.researchDate = researchDate;
    }

    @Column(name = "`research_source`", nullable = false, length = 50)
    public String getResearchSource() {
        return this.researchSource;
    }

    public void setResearchSource(String researchSource) {
        this.researchSource = researchSource;
    }

    @Column(name = "`deed_cost`", nullable = true, scale = 4, precision = 19)
    public Double getDeedCost() {
        return this.deedCost;
    }

    public void setDeedCost(Double deedCost) {
        this.deedCost = deedCost;
    }

    @Column(name = "`prior_assignment`", nullable = true)
    public Boolean getPriorAssignment() {
        return this.priorAssignment;
    }

    public void setPriorAssignment(Boolean priorAssignment) {
        this.priorAssignment = priorAssignment;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "`sale_date`", nullable = true)
    public Date getSaleDate() {
        return this.saleDate;
    }

    public void setSaleDate(Date saleDate) {
        this.saleDate = saleDate;
    }

    @Column(name = "`sale_amount`", nullable = true, scale = 4, precision = 19)
    public Double getSaleAmount() {
        return this.saleAmount;
    }

    public void setSaleAmount(Double saleAmount) {
        this.saleAmount = saleAmount;
    }

    @Column(name = "`last_import_id`", nullable = true, scale = 0, precision = 10)
    public Integer getLastImportId() {
        return this.lastImportId;
    }

    public void setLastImportId(Integer lastImportId) {
        this.lastImportId = lastImportId;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`auction_result_id`", referencedColumnName = "`id`", insertable = true, updatable = true)
    public AuctionResult getAuctionResult() {
        return this.auctionResult;
    }

    public void setAuctionResult(AuctionResult auctionResult) {
        this.auctionResult = auctionResult;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`property_id`", referencedColumnName = "`ID`", insertable = true, updatable = true)
    public Property getProperty() {
        return this.property;
    }

    public void setProperty(Property property) {
        this.property = property;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`research_bundle`", referencedColumnName = "`id`", insertable = true, updatable = true)
    public Research getResearch() {
        return this.research;
    }

    public void setResearch(Research research) {
        this.research = research;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof PropertySale)) return false;
        final PropertySale propertySale = (PropertySale) o;
        return Objects.equals(getId(), propertySale.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

