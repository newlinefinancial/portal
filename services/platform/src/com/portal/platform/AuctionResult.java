/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * AuctionResult generated by hbm2java
 */
@Entity
@Table(name="`auction_result`"
    ,schema="data"
)

public class AuctionResult  implements java.io.Serializable {

    
    private Integer id;
    
    private Date updatedTimestamp;
    
    private Date saleDate;
    
    private BigDecimal bidRate;
    
    private BigDecimal bidAmount;
    
    private Date subSaleDate;
    
    private Date lastRedemptionDate;
    
    private String status;
    
    private Date dispositionDate;
    
    private String caseNumber;
    
    private Date dispositionResearchDate;
    
    private Integer lastImportId;
    
    private Set<PropertySale> propertySales = new HashSet<PropertySale>(0);
    
    private Auction auction;
    
    private Buyer buyerBySubBuyerId;
    
    private Buyer buyerByBuyerId;
    
    private Property property;

    public AuctionResult() {
    }


    @Id @GeneratedValue(strategy=IDENTITY)
    

    @Column(name="`id`", precision=10)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

    @Temporal(TemporalType.TIMESTAMP)

    @Column(name="`updated_timestamp`", length=23)
    public Date getUpdatedTimestamp() {
        return this.updatedTimestamp;
    }
    
    public void setUpdatedTimestamp(Date updatedTimestamp) {
        this.updatedTimestamp = updatedTimestamp;
    }

    @Temporal(TemporalType.DATE)

    @Column(name="`sale_date`", length=10)
    public Date getSaleDate() {
        return this.saleDate;
    }
    
    public void setSaleDate(Date saleDate) {
        this.saleDate = saleDate;
    }

    

    @Column(name="`bid_rate`", precision=28, scale=6)
    public BigDecimal getBidRate() {
        return this.bidRate;
    }
    
    public void setBidRate(BigDecimal bidRate) {
        this.bidRate = bidRate;
    }

    

    @Column(name="`bid_amount`", precision=28, scale=6)
    public BigDecimal getBidAmount() {
        return this.bidAmount;
    }
    
    public void setBidAmount(BigDecimal bidAmount) {
        this.bidAmount = bidAmount;
    }

    @Temporal(TemporalType.DATE)

    @Column(name="`sub_sale_date`", length=10)
    public Date getSubSaleDate() {
        return this.subSaleDate;
    }
    
    public void setSubSaleDate(Date subSaleDate) {
        this.subSaleDate = subSaleDate;
    }

    @Temporal(TemporalType.DATE)

    @Column(name="`last_redemption_date`", length=10)
    public Date getLastRedemptionDate() {
        return this.lastRedemptionDate;
    }
    
    public void setLastRedemptionDate(Date lastRedemptionDate) {
        this.lastRedemptionDate = lastRedemptionDate;
    }

    

    @Column(name="`status`", length=10)
    public String getStatus() {
        return this.status;
    }
    
    public void setStatus(String status) {
        this.status = status;
    }

    @Temporal(TemporalType.DATE)

    @Column(name="`disposition_date`", length=10)
    public Date getDispositionDate() {
        return this.dispositionDate;
    }
    
    public void setDispositionDate(Date dispositionDate) {
        this.dispositionDate = dispositionDate;
    }

    

    @Column(name="`case_number`", length=50)
    public String getCaseNumber() {
        return this.caseNumber;
    }
    
    public void setCaseNumber(String caseNumber) {
        this.caseNumber = caseNumber;
    }

    @Temporal(TemporalType.DATE)

    @Column(name="`disposition_research_date`", length=10)
    public Date getDispositionResearchDate() {
        return this.dispositionResearchDate;
    }
    
    public void setDispositionResearchDate(Date dispositionResearchDate) {
        this.dispositionResearchDate = dispositionResearchDate;
    }

    

    @Column(name="`last_import_id`", precision=10)
    public Integer getLastImportId() {
        return this.lastImportId;
    }
    
    public void setLastImportId(Integer lastImportId) {
        this.lastImportId = lastImportId;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="auctionResult")
    public Set<PropertySale> getPropertySales() {
        return this.propertySales;
    }
    
    public void setPropertySales(Set<PropertySale> propertySales) {
        this.propertySales = propertySales;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`auction_id`")
    public Auction getAuction() {
        return this.auction;
    }
    
    public void setAuction(Auction auction) {
        this.auction = auction;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`sub_buyer_id`")
    public Buyer getBuyerBySubBuyerId() {
        return this.buyerBySubBuyerId;
    }
    
    public void setBuyerBySubBuyerId(Buyer buyerBySubBuyerId) {
        this.buyerBySubBuyerId = buyerBySubBuyerId;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`buyer_id`")
    public Buyer getBuyerByBuyerId() {
        return this.buyerByBuyerId;
    }
    
    public void setBuyerByBuyerId(Buyer buyerByBuyerId) {
        this.buyerByBuyerId = buyerByBuyerId;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`property_id`")
    public Property getProperty() {
        return this.property;
    }
    
    public void setProperty(Property property) {
        this.property = property;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof AuctionResult) )
		    return false;

		 AuctionResult that = (AuctionResult) o;

		 return ( (this.getId()==that.getId()) || ( this.getId()!=null && that.getId()!=null && this.getId().equals(that.getId()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getId() == null ? 0 : this.getId().hashCode() );

         return result;
    }


}

