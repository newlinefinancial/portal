/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * AuctionResult generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`auction_result`", schema = "data", uniqueConstraints = {
        @UniqueConstraint(columnNames = {"`auction_id`"})})
public class AuctionResult implements Serializable {

    private int id;
    private Date updatedTimestamp;
    private Date saleDate;
    private BigDecimal bidRate;
    private BigDecimal bidAmount;
    private Date subSaleDate;
    private Date lastRedemptionDate;
    private String status;
    private Date dispositionDate;
    private String caseNumber;
    private Date dispositionResearchDate;
    private Integer lastImportId;
    private List<PropertySale> propertySales = new ArrayList<>();
    private Auction auction;
    private Buyer buyerBySubBuyerId;
    private Buyer buyerByBuyerId;
    private Property property;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id`", nullable = false, scale = 0, precision = 10)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "`updated_timestamp`", nullable = false)
    public Date getUpdatedTimestamp() {
        return this.updatedTimestamp;
    }

    public void setUpdatedTimestamp(Date updatedTimestamp) {
        this.updatedTimestamp = updatedTimestamp;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "`sale_date`", nullable = false)
    public Date getSaleDate() {
        return this.saleDate;
    }

    public void setSaleDate(Date saleDate) {
        this.saleDate = saleDate;
    }

    @Column(name = "`bid_rate`", nullable = true, scale = 6, precision = 28)
    public BigDecimal getBidRate() {
        return this.bidRate;
    }

    public void setBidRate(BigDecimal bidRate) {
        this.bidRate = bidRate;
    }

    @Column(name = "`bid_amount`", nullable = true, scale = 6, precision = 28)
    public BigDecimal getBidAmount() {
        return this.bidAmount;
    }

    public void setBidAmount(BigDecimal bidAmount) {
        this.bidAmount = bidAmount;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "`sub_sale_date`", nullable = true)
    public Date getSubSaleDate() {
        return this.subSaleDate;
    }

    public void setSubSaleDate(Date subSaleDate) {
        this.subSaleDate = subSaleDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "`last_redemption_date`", nullable = true)
    public Date getLastRedemptionDate() {
        return this.lastRedemptionDate;
    }

    public void setLastRedemptionDate(Date lastRedemptionDate) {
        this.lastRedemptionDate = lastRedemptionDate;
    }

    @Column(name = "`status`", nullable = false, length = 10)
    public String getStatus() {
        return this.status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "`disposition_date`", nullable = true)
    public Date getDispositionDate() {
        return this.dispositionDate;
    }

    public void setDispositionDate(Date dispositionDate) {
        this.dispositionDate = dispositionDate;
    }

    @Column(name = "`case_number`", nullable = true, length = 50)
    public String getCaseNumber() {
        return this.caseNumber;
    }

    public void setCaseNumber(String caseNumber) {
        this.caseNumber = caseNumber;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "`disposition_research_date`", nullable = true)
    public Date getDispositionResearchDate() {
        return this.dispositionResearchDate;
    }

    public void setDispositionResearchDate(Date dispositionResearchDate) {
        this.dispositionResearchDate = dispositionResearchDate;
    }

    @Column(name = "`last_import_id`", nullable = true, scale = 0, precision = 10)
    public Integer getLastImportId() {
        return this.lastImportId;
    }

    public void setLastImportId(Integer lastImportId) {
        this.lastImportId = lastImportId;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "auctionResult")
    public List<PropertySale> getPropertySales() {
        return this.propertySales;
    }

    public void setPropertySales(List<PropertySale> propertySales) {
        this.propertySales = propertySales;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`auction_id`", referencedColumnName = "`id`", insertable = true, updatable = true)
    public Auction getAuction() {
        return this.auction;
    }

    public void setAuction(Auction auction) {
        this.auction = auction;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`sub_buyer_id`", referencedColumnName = "`id`", insertable = true, updatable = true)
    public Buyer getBuyerBySubBuyerId() {
        return this.buyerBySubBuyerId;
    }

    public void setBuyerBySubBuyerId(Buyer buyerBySubBuyerId) {
        this.buyerBySubBuyerId = buyerBySubBuyerId;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`buyer_id`", referencedColumnName = "`id`", insertable = true, updatable = true)
    public Buyer getBuyerByBuyerId() {
        return this.buyerByBuyerId;
    }

    public void setBuyerByBuyerId(Buyer buyerByBuyerId) {
        this.buyerByBuyerId = buyerByBuyerId;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`property_id`", referencedColumnName = "`ID`", insertable = true, updatable = true)
    public Property getProperty() {
        return this.property;
    }

    public void setProperty(Property property) {
        this.property = property;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof AuctionResult)) return false;
        final AuctionResult auctionResult = (AuctionResult) o;
        return Objects.equals(getId(), auctionResult.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

