/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * Note generated by hbm2java
 */
@Entity
@Table(name="`note`"
    ,schema="review"
)

public class Note  implements java.io.Serializable {

    
    private Integer id;
    
    private Date createdTimestamp;
    
    private Date dueDate;
    
    private Date doneTimestamp;
    
    private String comments;
    
    private String user;
    
    private Certificate certificate;
    
    private Grade grade;
    
    private Property property;
    
    private NoteType noteType;

    public Note() {
    }


    @Id @GeneratedValue(strategy=IDENTITY)
    

    @Column(name="`id`", precision=10)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

    @Temporal(TemporalType.TIMESTAMP)

    @Column(name="`created_timestamp`", length=23)
    public Date getCreatedTimestamp() {
        return this.createdTimestamp;
    }
    
    public void setCreatedTimestamp(Date createdTimestamp) {
        this.createdTimestamp = createdTimestamp;
    }

    @Temporal(TemporalType.DATE)

    @Column(name="`due_date`", length=10)
    public Date getDueDate() {
        return this.dueDate;
    }
    
    public void setDueDate(Date dueDate) {
        this.dueDate = dueDate;
    }

    @Temporal(TemporalType.TIMESTAMP)

    @Column(name="`done_timestamp`", length=23)
    public Date getDoneTimestamp() {
        return this.doneTimestamp;
    }
    
    public void setDoneTimestamp(Date doneTimestamp) {
        this.doneTimestamp = doneTimestamp;
    }

    

    @Column(name="`comments`", length=200)
    public String getComments() {
        return this.comments;
    }
    
    public void setComments(String comments) {
        this.comments = comments;
    }

    

    @Column(name="`user`", length=10)
    public String getUser() {
        return this.user;
    }
    
    public void setUser(String user) {
        this.user = user;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`certificate_id`")
    public Certificate getCertificate() {
        return this.certificate;
    }
    
    public void setCertificate(Certificate certificate) {
        this.certificate = certificate;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`grade_id`")
    public Grade getGrade() {
        return this.grade;
    }
    
    public void setGrade(Grade grade) {
        this.grade = grade;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`property_id`")
    public Property getProperty() {
        return this.property;
    }
    
    public void setProperty(Property property) {
        this.property = property;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`note_type_id`")
    public NoteType getNoteType() {
        return this.noteType;
    }
    
    public void setNoteType(NoteType noteType) {
        this.noteType = noteType;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof Note) )
		    return false;

		 Note that = (Note) o;

		 return ( (this.getId()==that.getId()) || ( this.getId()!=null && that.getId()!=null && this.getId().equals(that.getId()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getId() == null ? 0 : this.getId().hashCode() );

         return result;
    }


}

