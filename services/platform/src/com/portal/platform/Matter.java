/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * Matter generated by hbm2java
 */
@Entity
@Table(name="`matter`"
    ,schema="servicing"
)

public class Matter  implements java.io.Serializable {

    
    private Integer id;
    
    private String matterNumber;
    
    private String pinOverride;
    
    private String addressOverride;
    
    private String user;
    
    private Date filedDate;
    
    private Date lastWorkDate;
    
    private Date initialCourtDate;
    
    private Date closedDate;
    
    private Set<MatterParty> matterParties = new HashSet<MatterParty>(0);
    
    private Certificate certificate;

    public Matter() {
    }


    @Id @GeneratedValue(strategy=IDENTITY)
    

    @Column(name="`id`", precision=10)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

    

    @Column(name="`matter_number`", length=50)
    public String getMatterNumber() {
        return this.matterNumber;
    }
    
    public void setMatterNumber(String matterNumber) {
        this.matterNumber = matterNumber;
    }

    

    @Column(name="`pin_override`", length=150)
    public String getPinOverride() {
        return this.pinOverride;
    }
    
    public void setPinOverride(String pinOverride) {
        this.pinOverride = pinOverride;
    }

    

    @Column(name="`address_override`", length=150)
    public String getAddressOverride() {
        return this.addressOverride;
    }
    
    public void setAddressOverride(String addressOverride) {
        this.addressOverride = addressOverride;
    }

    

    @Column(name="`user`", length=50)
    public String getUser() {
        return this.user;
    }
    
    public void setUser(String user) {
        this.user = user;
    }

    @Temporal(TemporalType.DATE)

    @Column(name="`filed_date`", length=10)
    public Date getFiledDate() {
        return this.filedDate;
    }
    
    public void setFiledDate(Date filedDate) {
        this.filedDate = filedDate;
    }

    @Temporal(TemporalType.DATE)

    @Column(name="`last_work_date`", length=10)
    public Date getLastWorkDate() {
        return this.lastWorkDate;
    }
    
    public void setLastWorkDate(Date lastWorkDate) {
        this.lastWorkDate = lastWorkDate;
    }

    @Temporal(TemporalType.DATE)

    @Column(name="`initial_court_date`", length=10)
    public Date getInitialCourtDate() {
        return this.initialCourtDate;
    }
    
    public void setInitialCourtDate(Date initialCourtDate) {
        this.initialCourtDate = initialCourtDate;
    }

    @Temporal(TemporalType.DATE)

    @Column(name="`closed_date`", length=10)
    public Date getClosedDate() {
        return this.closedDate;
    }
    
    public void setClosedDate(Date closedDate) {
        this.closedDate = closedDate;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="matter")
    public Set<MatterParty> getMatterParties() {
        return this.matterParties;
    }
    
    public void setMatterParties(Set<MatterParty> matterParties) {
        this.matterParties = matterParties;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`certificate_id`")
    public Certificate getCertificate() {
        return this.certificate;
    }
    
    public void setCertificate(Certificate certificate) {
        this.certificate = certificate;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof Matter) )
		    return false;

		 Matter that = (Matter) o;

		 return ( (this.getId()==that.getId()) || ( this.getId()!=null && that.getId()!=null && this.getId().equals(that.getId()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getId() == null ? 0 : this.getId().hashCode() );

         return result;
    }


}

