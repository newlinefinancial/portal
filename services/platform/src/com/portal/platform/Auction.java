/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * Auction generated by hbm2java
 */
@Entity
@Table(name="`auction`"
    ,schema="data"
)

public class Auction  implements java.io.Serializable {

    
    private Integer id;
    
    private java.util.Date updatedTimestamp;
    
    private Integer taxYear;
    
    private Integer sequence;
    
    private Double priorYearsDue;
    
    private Double otherDue;
    
    private Double auctionYearBilled;
    
    private Double auctionYearDue;
    
    private Double auctionInst1Due;
    
    private Double auctionInst2Due;
    
    private Double saleAmount;
    
    private Boolean removed;
    
    private Integer lastImportId;
    
    private Set<Underwriting> underwritings = new HashSet<Underwriting>(0);
    
    private County county;
    
    private Property property;
    
    private Set<Sample> samples = new HashSet<Sample>(0);
    
    private Set<AuctionResult> auctionResults = new HashSet<AuctionResult>(0);

    public Auction() {
    }


    @Id @GeneratedValue(strategy=IDENTITY)
    

    @Column(name="`id`", precision=10)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

    @Temporal(TemporalType.DATE)

    @Column(name="`updated_timestamp`", length=10)
    public java.util.Date getUpdatedTimestamp() {
        return this.updatedTimestamp;
    }
    
    public void setUpdatedTimestamp(java.util.Date updatedTimestamp) {
        this.updatedTimestamp = updatedTimestamp;
    }

    

    @Column(name="`tax_year`", precision=10)
    public Integer getTaxYear() {
        return this.taxYear;
    }
    
    public void setTaxYear(Integer taxYear) {
        this.taxYear = taxYear;
    }

    

    @Column(name="`sequence`", precision=10)
    public Integer getSequence() {
        return this.sequence;
    }
    
    public void setSequence(Integer sequence) {
        this.sequence = sequence;
    }

    

    @Column(name="`prior_years_due`", scale=4)
    public Double getPriorYearsDue() {
        return this.priorYearsDue;
    }
    
    public void setPriorYearsDue(Double priorYearsDue) {
        this.priorYearsDue = priorYearsDue;
    }

    

    @Column(name="`other_due`", scale=4)
    public Double getOtherDue() {
        return this.otherDue;
    }
    
    public void setOtherDue(Double otherDue) {
        this.otherDue = otherDue;
    }

    

    @Column(name="`auction_year_billed`", scale=4)
    public Double getAuctionYearBilled() {
        return this.auctionYearBilled;
    }
    
    public void setAuctionYearBilled(Double auctionYearBilled) {
        this.auctionYearBilled = auctionYearBilled;
    }

    

    @Column(name="`auction_year_due`", scale=4)
    public Double getAuctionYearDue() {
        return this.auctionYearDue;
    }
    
    public void setAuctionYearDue(Double auctionYearDue) {
        this.auctionYearDue = auctionYearDue;
    }

    

    @Column(name="`auction_inst1_due`", scale=4)
    public Double getAuctionInst1Due() {
        return this.auctionInst1Due;
    }
    
    public void setAuctionInst1Due(Double auctionInst1Due) {
        this.auctionInst1Due = auctionInst1Due;
    }

    

    @Column(name="`auction_inst2_due`", scale=4)
    public Double getAuctionInst2Due() {
        return this.auctionInst2Due;
    }
    
    public void setAuctionInst2Due(Double auctionInst2Due) {
        this.auctionInst2Due = auctionInst2Due;
    }

    

    @Column(name="`sale_amount`", scale=4)
    public Double getSaleAmount() {
        return this.saleAmount;
    }
    
    public void setSaleAmount(Double saleAmount) {
        this.saleAmount = saleAmount;
    }

    

    @Column(name="`removed`")
    public Boolean getRemoved() {
        return this.removed;
    }
    
    public void setRemoved(Boolean removed) {
        this.removed = removed;
    }

    

    @Column(name="`last_import_id`", precision=10)
    public Integer getLastImportId() {
        return this.lastImportId;
    }
    
    public void setLastImportId(Integer lastImportId) {
        this.lastImportId = lastImportId;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="auction")
    public Set<Underwriting> getUnderwritings() {
        return this.underwritings;
    }
    
    public void setUnderwritings(Set<Underwriting> underwritings) {
        this.underwritings = underwritings;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`county_id`")
    public County getCounty() {
        return this.county;
    }
    
    public void setCounty(County county) {
        this.county = county;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`property_id`")
    public Property getProperty() {
        return this.property;
    }
    
    public void setProperty(Property property) {
        this.property = property;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="auction")
    public Set<Sample> getSamples() {
        return this.samples;
    }
    
    public void setSamples(Set<Sample> samples) {
        this.samples = samples;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="auction")
    public Set<AuctionResult> getAuctionResults() {
        return this.auctionResults;
    }
    
    public void setAuctionResults(Set<AuctionResult> auctionResults) {
        this.auctionResults = auctionResults;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof Auction) )
		    return false;

		 Auction that = (Auction) o;

		 return ( (this.getId()==that.getId()) || ( this.getId()!=null && that.getId()!=null && this.getId().equals(that.getId()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getId() == null ? 0 : this.getId().hashCode() );

         return result;
    }


}

