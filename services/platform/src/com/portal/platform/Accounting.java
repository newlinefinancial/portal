/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * Accounting generated by hbm2java
 */
@Entity
@Table(name="`accounting`"
    ,schema="servicing"
)
@IdClass(value=AccountingId.class)
public class Accounting  implements java.io.Serializable {

    
    private Integer certificateId;
    
    private Date accountingDate;
    
    private Date effectiveDate;
    
    private String transaction;
    
    private String category;
    
    private String type;
    
    private Double principal;
    
    private Double revenue;
    
    private Double cash;

    public Accounting() {
    }


    @Id 
    

    @Column(name="`certificate_id`", insertable=false, updatable=false, precision=10)
    public Integer getCertificateId() {
        return this.certificateId;
    }
    
    public void setCertificateId(Integer certificateId) {
        this.certificateId = certificateId;
    }
    @Id 
    @Temporal(TemporalType.DATE)

    @Column(name="`accounting_date`", insertable=false, updatable=false, length=10)
    public Date getAccountingDate() {
        return this.accountingDate;
    }
    
    public void setAccountingDate(Date accountingDate) {
        this.accountingDate = accountingDate;
    }
    @Id 
    @Temporal(TemporalType.DATE)

    @Column(name="`effective_date`", insertable=false, updatable=false, length=10)
    public Date getEffectiveDate() {
        return this.effectiveDate;
    }
    
    public void setEffectiveDate(Date effectiveDate) {
        this.effectiveDate = effectiveDate;
    }
    @Id 
    

    @Column(name="`transaction`", insertable=false, updatable=false, length=12)
    public String getTransaction() {
        return this.transaction;
    }
    
    public void setTransaction(String transaction) {
        this.transaction = transaction;
    }
    @Id 
    

    @Column(name="`category`", insertable=false, updatable=false, length=50)
    public String getCategory() {
        return this.category;
    }
    
    public void setCategory(String category) {
        this.category = category;
    }
    @Id 
    

    @Column(name="`type`", insertable=false, updatable=false, length=50)
    public String getType() {
        return this.type;
    }
    
    public void setType(String type) {
        this.type = type;
    }
    @Id 
    

    @Column(name="`principal`", insertable=false, updatable=false, scale=4)
    public Double getPrincipal() {
        return this.principal;
    }
    
    public void setPrincipal(Double principal) {
        this.principal = principal;
    }
    @Id 
    

    @Column(name="`revenue`", insertable=false, updatable=false, scale=4)
    public Double getRevenue() {
        return this.revenue;
    }
    
    public void setRevenue(Double revenue) {
        this.revenue = revenue;
    }
    @Id 
    

    @Column(name="`cash`", insertable=false, updatable=false, scale=4)
    public Double getCash() {
        return this.cash;
    }
    
    public void setCash(Double cash) {
        this.cash = cash;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof Accounting) )
		    return false;

		 Accounting that = (Accounting) o;

         return ( (this.getCertificateId()==that.getCertificateId()) || ( this.getCertificateId()!=null && that.getCertificateId()!=null && this.getCertificateId().equals(that.getCertificateId()) ) )
 && ( (this.getAccountingDate()==that.getAccountingDate()) || ( this.getAccountingDate()!=null && that.getAccountingDate()!=null && this.getAccountingDate().equals(that.getAccountingDate()) ) )
 && ( (this.getEffectiveDate()==that.getEffectiveDate()) || ( this.getEffectiveDate()!=null && that.getEffectiveDate()!=null && this.getEffectiveDate().equals(that.getEffectiveDate()) ) )
 && ( (this.getTransaction()==that.getTransaction()) || ( this.getTransaction()!=null && that.getTransaction()!=null && this.getTransaction().equals(that.getTransaction()) ) )
 && ( (this.getCategory()==that.getCategory()) || ( this.getCategory()!=null && that.getCategory()!=null && this.getCategory().equals(that.getCategory()) ) )
 && ( (this.getType()==that.getType()) || ( this.getType()!=null && that.getType()!=null && this.getType().equals(that.getType()) ) )
 && ( (this.getPrincipal()==that.getPrincipal()) || ( this.getPrincipal()!=null && that.getPrincipal()!=null && this.getPrincipal().equals(that.getPrincipal()) ) )
 && ( (this.getRevenue()==that.getRevenue()) || ( this.getRevenue()!=null && that.getRevenue()!=null && this.getRevenue().equals(that.getRevenue()) ) )
 && ( (this.getCash()==that.getCash()) || ( this.getCash()!=null && that.getCash()!=null && this.getCash().equals(that.getCash()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getCertificateId() == null ? 0 : this.getCertificateId().hashCode() );
         result = 37 * result + ( getAccountingDate() == null ? 0 : this.getAccountingDate().hashCode() );
         result = 37 * result + ( getEffectiveDate() == null ? 0 : this.getEffectiveDate().hashCode() );
         result = 37 * result + ( getTransaction() == null ? 0 : this.getTransaction().hashCode() );
         result = 37 * result + ( getCategory() == null ? 0 : this.getCategory().hashCode() );
         result = 37 * result + ( getType() == null ? 0 : this.getType().hashCode() );
         result = 37 * result + ( getPrincipal() == null ? 0 : this.getPrincipal().hashCode() );
         result = 37 * result + ( getRevenue() == null ? 0 : this.getRevenue().hashCode() );
         result = 37 * result + ( getCash() == null ? 0 : this.getCash().hashCode() );

         return result;
    }


}

