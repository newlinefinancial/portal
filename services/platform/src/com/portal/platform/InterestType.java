/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * InterestType generated by hbm2java
 */
@Entity
@Table(name="`interest_type`"
    ,schema="servicing"
)

public class InterestType  implements java.io.Serializable {

    
    private String code;
    
    private String name;
    
    private Set<MatterParty> matterPartiesForInterestType3 = new HashSet<MatterParty>(0);
    
    private Set<MatterParty> matterPartiesForInterestType2 = new HashSet<MatterParty>(0);
    
    private Set<MatterParty> matterPartiesForInterestType1 = new HashSet<MatterParty>(0);

    public InterestType() {
    }


    @Id 
    

    @Column(name="`code`", length=4)
    public String getCode() {
        return this.code;
    }
    
    public void setCode(String code) {
        this.code = code;
    }

    

    @Column(name="`name`", length=50)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="interestTypeByInterestType3")
    public Set<MatterParty> getMatterPartiesForInterestType3() {
        return this.matterPartiesForInterestType3;
    }
    
    public void setMatterPartiesForInterestType3(Set<MatterParty> matterPartiesForInterestType3) {
        this.matterPartiesForInterestType3 = matterPartiesForInterestType3;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="interestTypeByInterestType2")
    public Set<MatterParty> getMatterPartiesForInterestType2() {
        return this.matterPartiesForInterestType2;
    }
    
    public void setMatterPartiesForInterestType2(Set<MatterParty> matterPartiesForInterestType2) {
        this.matterPartiesForInterestType2 = matterPartiesForInterestType2;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="interestTypeByInterestType1")
    public Set<MatterParty> getMatterPartiesForInterestType1() {
        return this.matterPartiesForInterestType1;
    }
    
    public void setMatterPartiesForInterestType1(Set<MatterParty> matterPartiesForInterestType1) {
        this.matterPartiesForInterestType1 = matterPartiesForInterestType1;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof InterestType) )
		    return false;

		 InterestType that = (InterestType) o;

		 return ( (this.getCode()==that.getCode()) || ( this.getCode()!=null && that.getCode()!=null && this.getCode().equals(that.getCode()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getCode() == null ? 0 : this.getCode().hashCode() );

         return result;
    }


}

