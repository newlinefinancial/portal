/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * RejectReason generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`reject_reason`", schema = "review")
public class RejectReason implements Serializable {

    private int id;
    private String rejectReason;
    private String type;
    private Integer noteTypeId;
    private Integer newNoteTypeId;
    private List<Inspection> inspections = new ArrayList<>();

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`Id`", nullable = false, scale = 0, precision = 10)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @Column(name = "`reject_reason`", nullable = false, length = 50)
    public String getRejectReason() {
        return this.rejectReason;
    }

    public void setRejectReason(String rejectReason) {
        this.rejectReason = rejectReason;
    }

    @Column(name = "`type`", nullable = true, length = 50)
    public String getType() {
        return this.type;
    }

    public void setType(String type) {
        this.type = type;
    }

    @Column(name = "`note_type_id`", nullable = true, scale = 0, precision = 10)
    public Integer getNoteTypeId() {
        return this.noteTypeId;
    }

    public void setNoteTypeId(Integer noteTypeId) {
        this.noteTypeId = noteTypeId;
    }

    @Column(name = "`new_note_type_id`", nullable = true, scale = 0, precision = 10)
    public Integer getNewNoteTypeId() {
        return this.newNoteTypeId;
    }

    public void setNewNoteTypeId(Integer newNoteTypeId) {
        this.newNoteTypeId = newNoteTypeId;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "rejectReason")
    public List<Inspection> getInspections() {
        return this.inspections;
    }

    public void setInspections(List<Inspection> inspections) {
        this.inspections = inspections;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof RejectReason)) return false;
        final RejectReason rejectReason = (RejectReason) o;
        return Objects.equals(getId(), rejectReason.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

