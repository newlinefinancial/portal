/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Assessment generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`assessment`", schema = "data", uniqueConstraints = {
        @UniqueConstraint(columnNames = {"`property_id`", "`tax_year`"})})
public class Assessment implements Serializable {

    private int id;
    private java.util.Date updatedTimestamp;
    private int taxYear;
    private String assesseeName;
    private String assesseeAddressLine1;
    private String assesseeAddressCity;
    private String assesseeAddressState;
    private String assesseeAddressZip;
    private Double assessedValuationLand;
    private Double equalizedValuation;
    private Double assessedValuationBuilding;
    private Double assessedValuationTotal;
    private Double homeExemption;
    private Double seniorExemption;
    private Boolean seniorFreeze;
    private double marketValue;
    private String conditionRating;
    private String qualityRating;
    private Integer lastImportId;
    private Property property;
    private PropertyClass propertyClass;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "`updated_timestamp`", nullable = false)
    public java.util.Date getUpdatedTimestamp() {
        return this.updatedTimestamp;
    }

    public void setUpdatedTimestamp(java.util.Date updatedTimestamp) {
        this.updatedTimestamp = updatedTimestamp;
    }

    @Column(name = "`tax_year`", nullable = false, scale = 0, precision = 10)
    public int getTaxYear() {
        return this.taxYear;
    }

    public void setTaxYear(int taxYear) {
        this.taxYear = taxYear;
    }

    @Column(name = "`assessee_name`", nullable = true, length = 100)
    public String getAssesseeName() {
        return this.assesseeName;
    }

    public void setAssesseeName(String assesseeName) {
        this.assesseeName = assesseeName;
    }

    @Column(name = "`assessee_address_line1`", nullable = true, length = 100)
    public String getAssesseeAddressLine1() {
        return this.assesseeAddressLine1;
    }

    public void setAssesseeAddressLine1(String assesseeAddressLine1) {
        this.assesseeAddressLine1 = assesseeAddressLine1;
    }

    @Column(name = "`assessee_address_city`", nullable = true, length = 50)
    public String getAssesseeAddressCity() {
        return this.assesseeAddressCity;
    }

    public void setAssesseeAddressCity(String assesseeAddressCity) {
        this.assesseeAddressCity = assesseeAddressCity;
    }

    @Column(name = "`assessee_address_state`", nullable = true, length = 2)
    public String getAssesseeAddressState() {
        return this.assesseeAddressState;
    }

    public void setAssesseeAddressState(String assesseeAddressState) {
        this.assesseeAddressState = assesseeAddressState;
    }

    @Column(name = "`assessee_address_zip`", nullable = true, length = 10)
    public String getAssesseeAddressZip() {
        return this.assesseeAddressZip;
    }

    public void setAssesseeAddressZip(String assesseeAddressZip) {
        this.assesseeAddressZip = assesseeAddressZip;
    }

    @Column(name = "`assessed_valuation_land`", nullable = true, scale = 4, precision = 19)
    public Double getAssessedValuationLand() {
        return this.assessedValuationLand;
    }

    public void setAssessedValuationLand(Double assessedValuationLand) {
        this.assessedValuationLand = assessedValuationLand;
    }

    @Column(name = "`equalized_valuation`", nullable = true, scale = 4, precision = 19)
    public Double getEqualizedValuation() {
        return this.equalizedValuation;
    }

    public void setEqualizedValuation(Double equalizedValuation) {
        this.equalizedValuation = equalizedValuation;
    }

    @Column(name = "`assessed_valuation_building`", nullable = true, scale = 4, precision = 19)
    public Double getAssessedValuationBuilding() {
        return this.assessedValuationBuilding;
    }

    public void setAssessedValuationBuilding(Double assessedValuationBuilding) {
        this.assessedValuationBuilding = assessedValuationBuilding;
    }

    @Column(name = "`assessed_valuation_total`", nullable = true, scale = 4, precision = 19)
    public Double getAssessedValuationTotal() {
        return this.assessedValuationTotal;
    }

    public void setAssessedValuationTotal(Double assessedValuationTotal) {
        this.assessedValuationTotal = assessedValuationTotal;
    }

    @Column(name = "`home_exemption`", nullable = true, scale = 4, precision = 19)
    public Double getHomeExemption() {
        return this.homeExemption;
    }

    public void setHomeExemption(Double homeExemption) {
        this.homeExemption = homeExemption;
    }

    @Column(name = "`senior_exemption`", nullable = true, scale = 4, precision = 19)
    public Double getSeniorExemption() {
        return this.seniorExemption;
    }

    public void setSeniorExemption(Double seniorExemption) {
        this.seniorExemption = seniorExemption;
    }

    @Column(name = "`senior_freeze`", nullable = true)
    public Boolean getSeniorFreeze() {
        return this.seniorFreeze;
    }

    public void setSeniorFreeze(Boolean seniorFreeze) {
        this.seniorFreeze = seniorFreeze;
    }

    @Column(name = "`market_value`", nullable = false, scale = 4, precision = 19)
    public double getMarketValue() {
        return this.marketValue;
    }

    public void setMarketValue(double marketValue) {
        this.marketValue = marketValue;
    }

    @Column(name = "`condition_rating`", nullable = true, length = 50)
    public String getConditionRating() {
        return this.conditionRating;
    }

    public void setConditionRating(String conditionRating) {
        this.conditionRating = conditionRating;
    }

    @Column(name = "`quality_rating`", nullable = true, length = 50)
    public String getQualityRating() {
        return this.qualityRating;
    }

    public void setQualityRating(String qualityRating) {
        this.qualityRating = qualityRating;
    }

    @Column(name = "`last_import_id`", nullable = true, scale = 0, precision = 10)
    public Integer getLastImportId() {
        return this.lastImportId;
    }

    public void setLastImportId(Integer lastImportId) {
        this.lastImportId = lastImportId;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`property_id`", referencedColumnName = "`ID`", insertable = true, updatable = true)
    public Property getProperty() {
        return this.property;
    }

    public void setProperty(Property property) {
        this.property = property;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`property_class_id`", referencedColumnName = "`ID`", insertable = true, updatable = true)
    public PropertyClass getPropertyClass() {
        return this.propertyClass;
    }

    public void setPropertyClass(PropertyClass propertyClass) {
        this.propertyClass = propertyClass;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Assessment)) return false;
        final Assessment assessment = (Assessment) o;
        return Objects.equals(getId(), assessment.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

