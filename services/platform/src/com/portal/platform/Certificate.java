/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Certificate generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`certificate`", schema = "servicing", uniqueConstraints = {
        @UniqueConstraint(columnNames = {"`PIN`", "`tax_year`", "`county_id`"})})
public class Certificate implements Serializable {

    private int id;
    private String certificateNumber;
    private int taxYear;
    private String pin;
    private int volume;
    private String vol;
    private BigDecimal bidRate;
    private Date dateSold;
    private Date expirationDate;
    private String status;
    private String bank;
    private String storageStatus;
    private Date releasedDate;
    private int currentPenaltyPeriod;
    private Date statusChangeDate;
    private boolean selectPrint;
    private String taxYearNotices;
    private Integer lastImportId;
    private String specialInstallment;
    private String specialWarrant;
    private String specialMunicipality;
    private String certificateType;
    private String subtaxDecision;
    private Date subtaxDecisionDate;
    private List<Disbursement> disbursements = new ArrayList<>();
    private List<Note> notes = new ArrayList<>();
    private List<Matter> matters = new ArrayList<>();
    private List<Payment> payments = new ArrayList<>();
    private List<Accrual> accruals = new ArrayList<>();
    private List<AvailableSubs> availableSubses = new ArrayList<>();
    private County county;
    private Property property;
    private List<CertificateParty> certificateParties = new ArrayList<>();

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id`", nullable = false, scale = 0, precision = 10)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @Column(name = "`certificate_number`", nullable = false, length = 50)
    public String getCertificateNumber() {
        return this.certificateNumber;
    }

    public void setCertificateNumber(String certificateNumber) {
        this.certificateNumber = certificateNumber;
    }

    @Column(name = "`tax_year`", nullable = false, scale = 0, precision = 10)
    public int getTaxYear() {
        return this.taxYear;
    }

    public void setTaxYear(int taxYear) {
        this.taxYear = taxYear;
    }

    @Column(name = "`PIN`", nullable = false, length = 50)
    public String getPin() {
        return this.pin;
    }

    public void setPin(String pin) {
        this.pin = pin;
    }

    @Column(name = "`volume`", nullable = false, scale = 0, precision = 10)
    public int getVolume() {
        return this.volume;
    }

    public void setVolume(int volume) {
        this.volume = volume;
    }

    @Column(name = "`vol`", nullable = false, length = 4)
    public String getVol() {
        return this.vol;
    }

    public void setVol(String vol) {
        this.vol = vol;
    }

    @Column(name = "`bid_rate`", nullable = false, scale = 9, precision = 53)
    public BigDecimal getBidRate() {
        return this.bidRate;
    }

    public void setBidRate(BigDecimal bidRate) {
        this.bidRate = bidRate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "`date_sold`", nullable = false)
    public Date getDateSold() {
        return this.dateSold;
    }

    public void setDateSold(Date dateSold) {
        this.dateSold = dateSold;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "`expiration_date`", nullable = false)
    public Date getExpirationDate() {
        return this.expirationDate;
    }

    public void setExpirationDate(Date expirationDate) {
        this.expirationDate = expirationDate;
    }

    @Column(name = "`status`", nullable = false, length = 50)
    public String getStatus() {
        return this.status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    @Column(name = "`bank`", nullable = true, length = 50)
    public String getBank() {
        return this.bank;
    }

    public void setBank(String bank) {
        this.bank = bank;
    }

    @Column(name = "`storage_status`", nullable = false, length = 50)
    public String getStorageStatus() {
        return this.storageStatus;
    }

    public void setStorageStatus(String storageStatus) {
        this.storageStatus = storageStatus;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "`released_date`", nullable = true)
    public Date getReleasedDate() {
        return this.releasedDate;
    }

    public void setReleasedDate(Date releasedDate) {
        this.releasedDate = releasedDate;
    }

    @Column(name = "`current_penalty_period`", nullable = false, scale = 0, precision = 10)
    public int getCurrentPenaltyPeriod() {
        return this.currentPenaltyPeriod;
    }

    public void setCurrentPenaltyPeriod(int currentPenaltyPeriod) {
        this.currentPenaltyPeriod = currentPenaltyPeriod;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "`status_change_date`", nullable = true)
    public Date getStatusChangeDate() {
        return this.statusChangeDate;
    }

    public void setStatusChangeDate(Date statusChangeDate) {
        this.statusChangeDate = statusChangeDate;
    }

    @Column(name = "`select_print`", nullable = false)
    public boolean isSelectPrint() {
        return this.selectPrint;
    }

    public void setSelectPrint(boolean selectPrint) {
        this.selectPrint = selectPrint;
    }

    @Column(name = "`tax_year_notices`", nullable = true, length = 220)
    public String getTaxYearNotices() {
        return this.taxYearNotices;
    }

    public void setTaxYearNotices(String taxYearNotices) {
        this.taxYearNotices = taxYearNotices;
    }

    @Column(name = "`last_import_id`", nullable = true, scale = 0, precision = 10)
    public Integer getLastImportId() {
        return this.lastImportId;
    }

    public void setLastImportId(Integer lastImportId) {
        this.lastImportId = lastImportId;
    }

    @Column(name = "`special_installment`", nullable = true, length = 50)
    public String getSpecialInstallment() {
        return this.specialInstallment;
    }

    public void setSpecialInstallment(String specialInstallment) {
        this.specialInstallment = specialInstallment;
    }

    @Column(name = "`special_warrant`", nullable = true, length = 50)
    public String getSpecialWarrant() {
        return this.specialWarrant;
    }

    public void setSpecialWarrant(String specialWarrant) {
        this.specialWarrant = specialWarrant;
    }

    @Column(name = "`special_municipality`", nullable = true, length = 50)
    public String getSpecialMunicipality() {
        return this.specialMunicipality;
    }

    public void setSpecialMunicipality(String specialMunicipality) {
        this.specialMunicipality = specialMunicipality;
    }

    @Column(name = "`certificate_type`", nullable = true, length = 50)
    public String getCertificateType() {
        return this.certificateType;
    }

    public void setCertificateType(String certificateType) {
        this.certificateType = certificateType;
    }

    @Column(name = "`subtax_decision`", nullable = true, length = 50)
    public String getSubtaxDecision() {
        return this.subtaxDecision;
    }

    public void setSubtaxDecision(String subtaxDecision) {
        this.subtaxDecision = subtaxDecision;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "`subtax_decision_date`", nullable = true)
    public Date getSubtaxDecisionDate() {
        return this.subtaxDecisionDate;
    }

    public void setSubtaxDecisionDate(Date subtaxDecisionDate) {
        this.subtaxDecisionDate = subtaxDecisionDate;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "certificate")
    public List<Disbursement> getDisbursements() {
        return this.disbursements;
    }

    public void setDisbursements(List<Disbursement> disbursements) {
        this.disbursements = disbursements;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "certificate")
    public List<Note> getNotes() {
        return this.notes;
    }

    public void setNotes(List<Note> notes) {
        this.notes = notes;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "certificate")
    public List<Matter> getMatters() {
        return this.matters;
    }

    public void setMatters(List<Matter> matters) {
        this.matters = matters;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "certificate")
    public List<Payment> getPayments() {
        return this.payments;
    }

    public void setPayments(List<Payment> payments) {
        this.payments = payments;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "certificate")
    public List<Accrual> getAccruals() {
        return this.accruals;
    }

    public void setAccruals(List<Accrual> accruals) {
        this.accruals = accruals;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "certificate")
    public List<AvailableSubs> getAvailableSubses() {
        return this.availableSubses;
    }

    public void setAvailableSubses(List<AvailableSubs> availableSubses) {
        this.availableSubses = availableSubses;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`county_id`", referencedColumnName = "`id`", insertable = true, updatable = true)
    public County getCounty() {
        return this.county;
    }

    public void setCounty(County county) {
        this.county = county;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`property_id`", referencedColumnName = "`ID`", insertable = true, updatable = true)
    public Property getProperty() {
        return this.property;
    }

    public void setProperty(Property property) {
        this.property = property;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "certificate")
    public List<CertificateParty> getCertificateParties() {
        return this.certificateParties;
    }

    public void setCertificateParties(List<CertificateParty> certificateParties) {
        this.certificateParties = certificateParties;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Certificate)) return false;
        final Certificate certificate = (Certificate) o;
        return Objects.equals(getId(), certificate.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

