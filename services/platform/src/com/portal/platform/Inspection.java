/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Date;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Inspection generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`inspection`", schema = "review", uniqueConstraints = {
        @UniqueConstraint(columnNames = {"`property_id`", "`inspection_date`"})})
public class Inspection implements Serializable {

    private int id;
    private Date inspectionDate;
    private char grade;
    private boolean notOccupied;
    private boolean forSale;
    private Integer rejectReasonId;
    private String user;
    private String source;
    private Property property;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "`inspection_date`", nullable = false)
    public Date getInspectionDate() {
        return this.inspectionDate;
    }

    public void setInspectionDate(Date inspectionDate) {
        this.inspectionDate = inspectionDate;
    }

    @Column(name = "`grade`", nullable = false, length = 1)
    public char getGrade() {
        return this.grade;
    }

    public void setGrade(char grade) {
        this.grade = grade;
    }

    @Column(name = "`not_occupied`", nullable = false)
    public boolean isNotOccupied() {
        return this.notOccupied;
    }

    public void setNotOccupied(boolean notOccupied) {
        this.notOccupied = notOccupied;
    }

    @Column(name = "`for_sale`", nullable = false)
    public boolean isForSale() {
        return this.forSale;
    }

    public void setForSale(boolean forSale) {
        this.forSale = forSale;
    }

    @Column(name = "`reject_reason_id`", nullable = true, scale = 0, precision = 10)
    public Integer getRejectReasonId() {
        return this.rejectReasonId;
    }

    public void setRejectReasonId(Integer rejectReasonId) {
        this.rejectReasonId = rejectReasonId;
    }

    @Column(name = "`user`", nullable = true, length = 25)
    public String getUser() {
        return this.user;
    }

    public void setUser(String user) {
        this.user = user;
    }

    @Column(name = "`source`", nullable = false, length = 50)
    public String getSource() {
        return this.source;
    }

    public void setSource(String source) {
        this.source = source;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`property_id`", referencedColumnName = "`ID`", insertable = true, updatable = true)
    public Property getProperty() {
        return this.property;
    }

    public void setProperty(Property property) {
        this.property = property;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Inspection)) return false;
        final Inspection inspection = (Inspection) o;
        return Objects.equals(getId(), inspection.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

