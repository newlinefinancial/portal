/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Disbursement generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`disbursement`", schema = "servicing", uniqueConstraints = {
        @UniqueConstraint(columnNames = {"`certificate_id`", "`payment_date`", "`amount`"})})
public class Disbursement implements Serializable {

    private int id;
    private Date createdTimestamp;
    private Date updatedTimestamp;
    private String category;
    private String type;
    private String taxYearPaid;
    private Integer installment;
    private Date paymentDate;
    private double amount;
    private String reference;
    private int currentPenaltyPeriod;
    private boolean locked;
    private String user;
    private Integer lastImportId;
    private Certificate certificate;
    private List<Payment> payments = new ArrayList<>();
    private List<Accrual> accruals = new ArrayList<>();

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id`", nullable = false, scale = 0, precision = 10)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "`created_timestamp`", nullable = false)
    public Date getCreatedTimestamp() {
        return this.createdTimestamp;
    }

    public void setCreatedTimestamp(Date createdTimestamp) {
        this.createdTimestamp = createdTimestamp;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "`updated_timestamp`", nullable = false)
    public Date getUpdatedTimestamp() {
        return this.updatedTimestamp;
    }

    public void setUpdatedTimestamp(Date updatedTimestamp) {
        this.updatedTimestamp = updatedTimestamp;
    }

    @Column(name = "`category`", nullable = false, length = 50)
    public String getCategory() {
        return this.category;
    }

    public void setCategory(String category) {
        this.category = category;
    }

    @Column(name = "`type`", nullable = false, length = 50)
    public String getType() {
        return this.type;
    }

    public void setType(String type) {
        this.type = type;
    }

    @Column(name = "`tax_year_paid`", nullable = true, length = 255)
    public String getTaxYearPaid() {
        return this.taxYearPaid;
    }

    public void setTaxYearPaid(String taxYearPaid) {
        this.taxYearPaid = taxYearPaid;
    }

    @Column(name = "`installment`", nullable = true, scale = 0, precision = 10)
    public Integer getInstallment() {
        return this.installment;
    }

    public void setInstallment(Integer installment) {
        this.installment = installment;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "`payment_date`", nullable = false)
    public Date getPaymentDate() {
        return this.paymentDate;
    }

    public void setPaymentDate(Date paymentDate) {
        this.paymentDate = paymentDate;
    }

    @Column(name = "`amount`", nullable = false, scale = 4, precision = 19)
    public double getAmount() {
        return this.amount;
    }

    public void setAmount(double amount) {
        this.amount = amount;
    }

    @Column(name = "`reference`", nullable = true, length = 50)
    public String getReference() {
        return this.reference;
    }

    public void setReference(String reference) {
        this.reference = reference;
    }

    @Column(name = "`current_penalty_period`", nullable = false, scale = 0, precision = 10)
    public int getCurrentPenaltyPeriod() {
        return this.currentPenaltyPeriod;
    }

    public void setCurrentPenaltyPeriod(int currentPenaltyPeriod) {
        this.currentPenaltyPeriod = currentPenaltyPeriod;
    }

    @Column(name = "`locked`", nullable = false)
    public boolean isLocked() {
        return this.locked;
    }

    public void setLocked(boolean locked) {
        this.locked = locked;
    }

    @Column(name = "`user`", nullable = false, length = 50)
    public String getUser() {
        return this.user;
    }

    public void setUser(String user) {
        this.user = user;
    }

    @Column(name = "`last_import_id`", nullable = true, scale = 0, precision = 10)
    public Integer getLastImportId() {
        return this.lastImportId;
    }

    public void setLastImportId(Integer lastImportId) {
        this.lastImportId = lastImportId;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`certificate_id`", referencedColumnName = "`id`", insertable = true, updatable = true)
    public Certificate getCertificate() {
        return this.certificate;
    }

    public void setCertificate(Certificate certificate) {
        this.certificate = certificate;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "disbursement")
    public List<Payment> getPayments() {
        return this.payments;
    }

    public void setPayments(List<Payment> payments) {
        this.payments = payments;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "disbursement")
    public List<Accrual> getAccruals() {
        return this.accruals;
    }

    public void setAccruals(List<Accrual> accruals) {
        this.accruals = accruals;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Disbursement)) return false;
        final Disbursement disbursement = (Disbursement) o;
        return Objects.equals(getId(), disbursement.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

