/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Party generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`party`", schema = "servicing", uniqueConstraints = {
        @UniqueConstraint(columnNames = {"`name`", "`care_of`", "`address`"})})
public class Party implements Serializable {

    private int id;
    private Date createdTimestamp;
    private Date updatedTimestamp;
    private String class_;
    private boolean piq;
    private String name;
    private String careOf;
    private String address;
    private String city;
    private String state;
    private String zip;
    private Integer abacusId;
    private Source sourceBySource2;
    private Source sourceBySource1;
    private List<CertificateParty> certificateParties = new ArrayList<>();

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id`", nullable = false, scale = 0, precision = 10)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "`created_timestamp`", nullable = false)
    public Date getCreatedTimestamp() {
        return this.createdTimestamp;
    }

    public void setCreatedTimestamp(Date createdTimestamp) {
        this.createdTimestamp = createdTimestamp;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "`updated_timestamp`", nullable = false)
    public Date getUpdatedTimestamp() {
        return this.updatedTimestamp;
    }

    public void setUpdatedTimestamp(Date updatedTimestamp) {
        this.updatedTimestamp = updatedTimestamp;
    }

    @Column(name = "`class`", nullable = false, length = 50)
    public String getClass_() {
        return this.class_;
    }

    public void setClass_(String class_) {
        this.class_ = class_;
    }

    @Column(name = "`piq`", nullable = false)
    public boolean isPiq() {
        return this.piq;
    }

    public void setPiq(boolean piq) {
        this.piq = piq;
    }

    @Column(name = "`name`", nullable = false, length = 200)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "`care_of`", nullable = true, length = 150)
    public String getCareOf() {
        return this.careOf;
    }

    public void setCareOf(String careOf) {
        this.careOf = careOf;
    }

    @Column(name = "`address`", nullable = true, length = 100)
    public String getAddress() {
        return this.address;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    @Column(name = "`city`", nullable = true, length = 50)
    public String getCity() {
        return this.city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    @Column(name = "`state`", nullable = true, length = 2)
    public String getState() {
        return this.state;
    }

    public void setState(String state) {
        this.state = state;
    }

    @Column(name = "`zip`", nullable = true, length = 10)
    public String getZip() {
        return this.zip;
    }

    public void setZip(String zip) {
        this.zip = zip;
    }

    @Column(name = "`abacus_id`", nullable = true, scale = 0, precision = 10)
    public Integer getAbacusId() {
        return this.abacusId;
    }

    public void setAbacusId(Integer abacusId) {
        this.abacusId = abacusId;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`source2`", referencedColumnName = "`code`", insertable = true, updatable = true)
    public Source getSourceBySource2() {
        return this.sourceBySource2;
    }

    public void setSourceBySource2(Source sourceBySource2) {
        this.sourceBySource2 = sourceBySource2;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`source1`", referencedColumnName = "`code`", insertable = true, updatable = true)
    public Source getSourceBySource1() {
        return this.sourceBySource1;
    }

    public void setSourceBySource1(Source sourceBySource1) {
        this.sourceBySource1 = sourceBySource1;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "party")
    public List<CertificateParty> getCertificateParties() {
        return this.certificateParties;
    }

    public void setCertificateParties(List<CertificateParty> certificateParties) {
        this.certificateParties = certificateParties;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Party)) return false;
        final Party party = (Party) o;
        return Objects.equals(getId(), party.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

