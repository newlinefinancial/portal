/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * Grade generated by hbm2java
 */
@Entity
@Table(name="`grade`"
    ,schema="data"
)

public class Grade  implements java.io.Serializable {

    
    private Integer id;
    
    private String lookup;
    
    private Character grade;
    
    private Set<Note> notes = new HashSet<Note>(0);
    
    private Set<Property> properties = new HashSet<Property>(0);
    
    private County county;
    
    private Township township;

    public Grade() {
    }


    @Id @GeneratedValue(strategy=IDENTITY)
    

    @Column(name="`id`", precision=10)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

    

    @Column(name="`lookup`", length=10)
    public String getLookup() {
        return this.lookup;
    }
    
    public void setLookup(String lookup) {
        this.lookup = lookup;
    }

    

    @Column(name="`grade`", length=1)
    public Character getGrade() {
        return this.grade;
    }
    
    public void setGrade(Character grade) {
        this.grade = grade;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="grade")
    public Set<Note> getNotes() {
        return this.notes;
    }
    
    public void setNotes(Set<Note> notes) {
        this.notes = notes;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="grade")
    public Set<Property> getProperties() {
        return this.properties;
    }
    
    public void setProperties(Set<Property> properties) {
        this.properties = properties;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`county_id`")
    public County getCounty() {
        return this.county;
    }
    
    public void setCounty(County county) {
        this.county = county;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`township_id`")
    public Township getTownship() {
        return this.township;
    }
    
    public void setTownship(Township township) {
        this.township = township;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof Grade) )
		    return false;

		 Grade that = (Grade) o;

		 return ( (this.getId()==that.getId()) || ( this.getId()!=null && that.getId()!=null && this.getId().equals(that.getId()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getId() == null ? 0 : this.getId().hashCode() );

         return result;
    }


}

