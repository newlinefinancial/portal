/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Grade generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`grade`", schema = "data", uniqueConstraints = {
        @UniqueConstraint(columnNames = {"`county_id`", "`township_id`", "`lookup`"})})
public class Grade implements Serializable {

    private int id;
    private String lookup;
    private char grade;
    private List<Note> notes = new ArrayList<>();
    private List<Property> properties = new ArrayList<>();
    private County county;
    private Township township;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id`", nullable = false, scale = 0, precision = 10)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @Column(name = "`lookup`", nullable = false, length = 10)
    public String getLookup() {
        return this.lookup;
    }

    public void setLookup(String lookup) {
        this.lookup = lookup;
    }

    @Column(name = "`grade`", nullable = false, length = 1)
    public char getGrade() {
        return this.grade;
    }

    public void setGrade(char grade) {
        this.grade = grade;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "grade")
    public List<Note> getNotes() {
        return this.notes;
    }

    public void setNotes(List<Note> notes) {
        this.notes = notes;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "grade")
    public List<Property> getProperties() {
        return this.properties;
    }

    public void setProperties(List<Property> properties) {
        this.properties = properties;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`county_id`", referencedColumnName = "`id`", insertable = true, updatable = true)
    public County getCounty() {
        return this.county;
    }

    public void setCounty(County county) {
        this.county = county;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`township_id`", referencedColumnName = "`ID`", insertable = true, updatable = true)
    public Township getTownship() {
        return this.township;
    }

    public void setTownship(Township township) {
        this.township = township;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Grade)) return false;
        final Grade grade = (Grade) o;
        return Objects.equals(getId(), grade.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

