/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * CertificateParty generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`certificate_party`", schema = "servicing", uniqueConstraints = {
        @UniqueConstraint(columnNames = {"`certificate_id`", "`party_id`"})})
public class CertificateParty implements Serializable {

    private int id;
    private java.util.Date letter1;
    private java.util.Date letter2;
    private String serviceType;
    private String service1Status;
    private String service1Reference;
    private String service2Flag;
    private String service2Status;
    private String service2Reference;
    private String service3Flag;
    private String service3Status;
    private String service3Reference;
    private Certificate certificate;
    private InterestType interestTypeByInterestType3;
    private InterestType interestTypeByInterestType2;
    private InterestType interestTypeByInterestType1;
    private Party party;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id`", nullable = false, scale = 0, precision = 10)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "`letter1`", nullable = true)
    public java.util.Date getLetter1() {
        return this.letter1;
    }

    public void setLetter1(java.util.Date letter1) {
        this.letter1 = letter1;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "`letter2`", nullable = true)
    public java.util.Date getLetter2() {
        return this.letter2;
    }

    public void setLetter2(java.util.Date letter2) {
        this.letter2 = letter2;
    }

    @Column(name = "`service_type`", nullable = false, length = 50)
    public String getServiceType() {
        return this.serviceType;
    }

    public void setServiceType(String serviceType) {
        this.serviceType = serviceType;
    }

    @Column(name = "`service1_status`", nullable = true, length = 50)
    public String getService1Status() {
        return this.service1Status;
    }

    public void setService1Status(String service1Status) {
        this.service1Status = service1Status;
    }

    @Column(name = "`service1_reference`", nullable = true, length = 50)
    public String getService1Reference() {
        return this.service1Reference;
    }

    public void setService1Reference(String service1Reference) {
        this.service1Reference = service1Reference;
    }

    @Column(name = "`service2_flag`", nullable = true, length = 50)
    public String getService2Flag() {
        return this.service2Flag;
    }

    public void setService2Flag(String service2Flag) {
        this.service2Flag = service2Flag;
    }

    @Column(name = "`service2_status`", nullable = true, length = 50)
    public String getService2Status() {
        return this.service2Status;
    }

    public void setService2Status(String service2Status) {
        this.service2Status = service2Status;
    }

    @Column(name = "`service2_reference`", nullable = true, length = 50)
    public String getService2Reference() {
        return this.service2Reference;
    }

    public void setService2Reference(String service2Reference) {
        this.service2Reference = service2Reference;
    }

    @Column(name = "`service3_flag`", nullable = true, length = 50)
    public String getService3Flag() {
        return this.service3Flag;
    }

    public void setService3Flag(String service3Flag) {
        this.service3Flag = service3Flag;
    }

    @Column(name = "`service3_status`", nullable = true, length = 50)
    public String getService3Status() {
        return this.service3Status;
    }

    public void setService3Status(String service3Status) {
        this.service3Status = service3Status;
    }

    @Column(name = "`service3_reference`", nullable = true, length = 50)
    public String getService3Reference() {
        return this.service3Reference;
    }

    public void setService3Reference(String service3Reference) {
        this.service3Reference = service3Reference;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`certificate_id`", referencedColumnName = "`id`", insertable = true, updatable = true)
    public Certificate getCertificate() {
        return this.certificate;
    }

    public void setCertificate(Certificate certificate) {
        this.certificate = certificate;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`interest_type3`", referencedColumnName = "`code`", insertable = true, updatable = true)
    public InterestType getInterestTypeByInterestType3() {
        return this.interestTypeByInterestType3;
    }

    public void setInterestTypeByInterestType3(InterestType interestTypeByInterestType3) {
        this.interestTypeByInterestType3 = interestTypeByInterestType3;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`interest_type2`", referencedColumnName = "`code`", insertable = true, updatable = true)
    public InterestType getInterestTypeByInterestType2() {
        return this.interestTypeByInterestType2;
    }

    public void setInterestTypeByInterestType2(InterestType interestTypeByInterestType2) {
        this.interestTypeByInterestType2 = interestTypeByInterestType2;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`interest_type1`", referencedColumnName = "`code`", insertable = true, updatable = true)
    public InterestType getInterestTypeByInterestType1() {
        return this.interestTypeByInterestType1;
    }

    public void setInterestTypeByInterestType1(InterestType interestTypeByInterestType1) {
        this.interestTypeByInterestType1 = interestTypeByInterestType1;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`party_id`", referencedColumnName = "`id`", insertable = true, updatable = true)
    public Party getParty() {
        return this.party;
    }

    public void setParty(Party party) {
        this.party = party;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CertificateParty)) return false;
        final CertificateParty certificateParty = (CertificateParty) o;
        return Objects.equals(getId(), certificateParty.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

