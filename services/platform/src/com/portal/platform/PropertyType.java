/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * PropertyType generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`property_type`", schema = "data", uniqueConstraints = {
        @UniqueConstraint(columnNames = {"`type`"})})
public class PropertyType implements Serializable {

    private int id;
    private String zoning;
    private String improvementLevel;
    private String type;
    private List<Property> properties = new ArrayList<>();

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id`", nullable = false, scale = 0, precision = 10)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @Column(name = "`zoning`", nullable = false, length = 50)
    public String getZoning() {
        return this.zoning;
    }

    public void setZoning(String zoning) {
        this.zoning = zoning;
    }

    @Column(name = "`improvement_level`", nullable = false, length = 50)
    public String getImprovementLevel() {
        return this.improvementLevel;
    }

    public void setImprovementLevel(String improvementLevel) {
        this.improvementLevel = improvementLevel;
    }

    @Column(name = "`type`", nullable = false, length = 50)
    public String getType() {
        return this.type;
    }

    public void setType(String type) {
        this.type = type;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, mappedBy = "propertyType")
    public List<Property> getProperties() {
        return this.properties;
    }

    public void setProperties(List<Property> properties) {
        this.properties = properties;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof PropertyType)) return false;
        final PropertyType propertyType = (PropertyType) o;
        return Objects.equals(getId(), propertyType.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

