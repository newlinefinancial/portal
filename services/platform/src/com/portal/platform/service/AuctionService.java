/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.portal.platform.*;

/**
 * Service object for domain model class Auction.
 * @see com.portal.platform.Auction
 */

public interface AuctionService {
   /**
	 * Creates a new auction.
	 * 
	 * @param created
	 *            The information of the created auction.
	 * @return The created auction.
	 */
	public Auction create(Auction created);

	/**
	 * Deletes a auction.
	 * 
	 * @param auctionId
	 *            The id of the deleted auction.
	 * @return The deleted auction.
	 * @throws EntityNotFoundException
	 *             if no auction is found with the given id.
	 */
	public Auction delete(Integer auctionId) throws EntityNotFoundException;

	/**
	 * Finds all auctions.
	 * 
	 * @return A list of auctions.
	 */
	public Page<Auction> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<Auction> findAll(Pageable pageable);
	
	/**
	 * Finds auction by id.
	 * 
	 * @param id
	 *            The id of the wanted auction.
	 * @return The found auction. If no auction is found, this method returns
	 *         null.
	 */
	public Auction findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a auction.
	 * 
	 * @param updated
	 *            The information of the updated auction.
	 * @return The updated auction.
	 * @throws EntityNotFoundException
	 *             if no auction is found with given id.
	 */
	public Auction update(Auction updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the auctions in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the auction.
	 */

	public long countAll();


    public Page<Auction> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

