/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.portal.platform.*;

/**
 * Service object for domain model class ModelPostingAvailability.
 * @see com.portal.platform.ModelPostingAvailability
 */

public interface ModelPostingAvailabilityService {
   /**
	 * Creates a new modelpostingavailability.
	 * 
	 * @param created
	 *            The information of the created modelpostingavailability.
	 * @return The created modelpostingavailability.
	 */
	public ModelPostingAvailability create(ModelPostingAvailability created);

	/**
	 * Deletes a modelpostingavailability.
	 * 
	 * @param modelpostingavailabilityId
	 *            The id of the deleted modelpostingavailability.
	 * @return The deleted modelpostingavailability.
	 * @throws EntityNotFoundException
	 *             if no modelpostingavailability is found with the given id.
	 */
	public ModelPostingAvailability delete(ModelPostingAvailabilityId modelpostingavailabilityId) throws EntityNotFoundException;

	/**
	 * Finds all modelpostingavailabilitys.
	 * 
	 * @return A list of modelpostingavailabilitys.
	 */
	public Page<ModelPostingAvailability> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<ModelPostingAvailability> findAll(Pageable pageable);
	
	/**
	 * Finds modelpostingavailability by id.
	 * 
	 * @param id
	 *            The id of the wanted modelpostingavailability.
	 * @return The found modelpostingavailability. If no modelpostingavailability is found, this method returns
	 *         null.
	 */
	public ModelPostingAvailability findById(ModelPostingAvailabilityId id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a modelpostingavailability.
	 * 
	 * @param updated
	 *            The information of the updated modelpostingavailability.
	 * @return The updated modelpostingavailability.
	 * @throws EntityNotFoundException
	 *             if no modelpostingavailability is found with given id.
	 */
	public ModelPostingAvailability update(ModelPostingAvailability updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the modelpostingavailabilitys in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the modelpostingavailability.
	 */

	public long countAll();


    public Page<ModelPostingAvailability> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

