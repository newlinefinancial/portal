/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.portal.platform.PropertySale;

/**
 * Service object for domain model class PropertySale.
 *
 * @see {@link PropertySale}
 */
public interface PropertySaleService {


	/**
	 * Finds PropertySale by id.
	 *
	 * @param propertySaleId The id of the wanted PropertySale.
	 * @return The found PropertySale. If no PropertySale is found, this method returns null.
	 */
	PropertySale getById(Integer propertySaleId) throws EntityNotFoundException;

	/**
	 * Finds all PropertySales.
	 *
	 * @return A list of PropertySales.
	 */
    @Deprecated
	Page<PropertySale> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all PropertySales.
	 * @return A list of PropertySales.
	 */
    Page<PropertySale> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the PropertySales in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the PropertySale.
	 */
	long count(String query);

    Page<PropertySale> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

