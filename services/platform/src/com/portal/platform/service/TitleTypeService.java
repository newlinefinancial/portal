/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.portal.platform.*;

/**
 * Service object for domain model class TitleType.
 * @see com.portal.platform.TitleType
 */

public interface TitleTypeService {
   /**
	 * Creates a new titletype.
	 * 
	 * @param created
	 *            The information of the created titletype.
	 * @return The created titletype.
	 */
	public TitleType create(TitleType created);

	/**
	 * Deletes a titletype.
	 * 
	 * @param titletypeId
	 *            The id of the deleted titletype.
	 * @return The deleted titletype.
	 * @throws EntityNotFoundException
	 *             if no titletype is found with the given id.
	 */
	public TitleType delete(Integer titletypeId) throws EntityNotFoundException;

	/**
	 * Finds all titletypes.
	 * 
	 * @return A list of titletypes.
	 */
	public Page<TitleType> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<TitleType> findAll(Pageable pageable);
	
	/**
	 * Finds titletype by id.
	 * 
	 * @param id
	 *            The id of the wanted titletype.
	 * @return The found titletype. If no titletype is found, this method returns
	 *         null.
	 */
	public TitleType findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a titletype.
	 * 
	 * @param updated
	 *            The information of the updated titletype.
	 * @return The updated titletype.
	 * @throws EntityNotFoundException
	 *             if no titletype is found with given id.
	 */
	public TitleType update(TitleType updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the titletypes in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the titletype.
	 */

	public long countAll();


    public Page<TitleType> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

