/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.portal.platform.*;

/**
 * Service object for domain model class PortalCertificateFilter.
 * @see com.portal.platform.PortalCertificateFilter
 */

public interface PortalCertificateFilterService {
   /**
	 * Creates a new portalcertificatefilter.
	 * 
	 * @param created
	 *            The information of the created portalcertificatefilter.
	 * @return The created portalcertificatefilter.
	 */
	public PortalCertificateFilter create(PortalCertificateFilter created);

	/**
	 * Deletes a portalcertificatefilter.
	 * 
	 * @param portalcertificatefilterId
	 *            The id of the deleted portalcertificatefilter.
	 * @return The deleted portalcertificatefilter.
	 * @throws EntityNotFoundException
	 *             if no portalcertificatefilter is found with the given id.
	 */
	public PortalCertificateFilter delete(PortalCertificateFilterId portalcertificatefilterId) throws EntityNotFoundException;

	/**
	 * Finds all portalcertificatefilters.
	 * 
	 * @return A list of portalcertificatefilters.
	 */
	public Page<PortalCertificateFilter> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<PortalCertificateFilter> findAll(Pageable pageable);
	
	/**
	 * Finds portalcertificatefilter by id.
	 * 
	 * @param id
	 *            The id of the wanted portalcertificatefilter.
	 * @return The found portalcertificatefilter. If no portalcertificatefilter is found, this method returns
	 *         null.
	 */
	public PortalCertificateFilter findById(PortalCertificateFilterId id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a portalcertificatefilter.
	 * 
	 * @param updated
	 *            The information of the updated portalcertificatefilter.
	 * @return The updated portalcertificatefilter.
	 * @throws EntityNotFoundException
	 *             if no portalcertificatefilter is found with given id.
	 */
	public PortalCertificateFilter update(PortalCertificateFilter updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the portalcertificatefilters in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the portalcertificatefilter.
	 */

	public long countAll();


    public Page<PortalCertificateFilter> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

