/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.portal.platform.*;

/**
 * Service object for domain model class County.
 * @see com.portal.platform.County
 */

public interface CountyService {
   /**
	 * Creates a new county.
	 * 
	 * @param created
	 *            The information of the created county.
	 * @return The created county.
	 */
	public County create(County created);

	/**
	 * Deletes a county.
	 * 
	 * @param countyId
	 *            The id of the deleted county.
	 * @return The deleted county.
	 * @throws EntityNotFoundException
	 *             if no county is found with the given id.
	 */
	public County delete(Integer countyId) throws EntityNotFoundException;

	/**
	 * Finds all countys.
	 * 
	 * @return A list of countys.
	 */
	public Page<County> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<County> findAll(Pageable pageable);
	
	/**
	 * Finds county by id.
	 * 
	 * @param id
	 *            The id of the wanted county.
	 * @return The found county. If no county is found, this method returns
	 *         null.
	 */
	public County findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a county.
	 * 
	 * @param updated
	 *            The information of the updated county.
	 * @return The updated county.
	 * @throws EntityNotFoundException
	 *             if no county is found with given id.
	 */
	public County update(County updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the countys in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the county.
	 */

	public long countAll();


    public Page<County> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

