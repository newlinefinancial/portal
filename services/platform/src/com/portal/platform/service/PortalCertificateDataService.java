/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.portal.platform.*;

/**
 * Service object for domain model class PortalCertificateData.
 * @see com.portal.platform.PortalCertificateData
 */

public interface PortalCertificateDataService {
   /**
	 * Creates a new portalcertificatedata.
	 * 
	 * @param created
	 *            The information of the created portalcertificatedata.
	 * @return The created portalcertificatedata.
	 */
	public PortalCertificateData create(PortalCertificateData created);

	/**
	 * Deletes a portalcertificatedata.
	 * 
	 * @param portalcertificatedataId
	 *            The id of the deleted portalcertificatedata.
	 * @return The deleted portalcertificatedata.
	 * @throws EntityNotFoundException
	 *             if no portalcertificatedata is found with the given id.
	 */
	public PortalCertificateData delete(PortalCertificateDataId portalcertificatedataId) throws EntityNotFoundException;

	/**
	 * Finds all portalcertificatedatas.
	 * 
	 * @return A list of portalcertificatedatas.
	 */
	public Page<PortalCertificateData> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<PortalCertificateData> findAll(Pageable pageable);
	
	/**
	 * Finds portalcertificatedata by id.
	 * 
	 * @param id
	 *            The id of the wanted portalcertificatedata.
	 * @return The found portalcertificatedata. If no portalcertificatedata is found, this method returns
	 *         null.
	 */
	public PortalCertificateData findById(PortalCertificateDataId id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a portalcertificatedata.
	 * 
	 * @param updated
	 *            The information of the updated portalcertificatedata.
	 * @return The updated portalcertificatedata.
	 * @throws EntityNotFoundException
	 *             if no portalcertificatedata is found with given id.
	 */
	public PortalCertificateData update(PortalCertificateData updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the portalcertificatedatas in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the portalcertificatedata.
	 */

	public long countAll();


    public Page<PortalCertificateData> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

