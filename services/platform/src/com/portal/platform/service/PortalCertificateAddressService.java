/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.portal.platform.*;

/**
 * Service object for domain model class PortalCertificateAddress.
 * @see com.portal.platform.PortalCertificateAddress
 */

public interface PortalCertificateAddressService {
   /**
	 * Creates a new portalcertificateaddress.
	 * 
	 * @param created
	 *            The information of the created portalcertificateaddress.
	 * @return The created portalcertificateaddress.
	 */
	public PortalCertificateAddress create(PortalCertificateAddress created);

	/**
	 * Deletes a portalcertificateaddress.
	 * 
	 * @param portalcertificateaddressId
	 *            The id of the deleted portalcertificateaddress.
	 * @return The deleted portalcertificateaddress.
	 * @throws EntityNotFoundException
	 *             if no portalcertificateaddress is found with the given id.
	 */
	public PortalCertificateAddress delete(PortalCertificateAddressId portalcertificateaddressId) throws EntityNotFoundException;

	/**
	 * Finds all portalcertificateaddresss.
	 * 
	 * @return A list of portalcertificateaddresss.
	 */
	public Page<PortalCertificateAddress> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<PortalCertificateAddress> findAll(Pageable pageable);
	
	/**
	 * Finds portalcertificateaddress by id.
	 * 
	 * @param id
	 *            The id of the wanted portalcertificateaddress.
	 * @return The found portalcertificateaddress. If no portalcertificateaddress is found, this method returns
	 *         null.
	 */
	public PortalCertificateAddress findById(PortalCertificateAddressId id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a portalcertificateaddress.
	 * 
	 * @param updated
	 *            The information of the updated portalcertificateaddress.
	 * @return The updated portalcertificateaddress.
	 * @throws EntityNotFoundException
	 *             if no portalcertificateaddress is found with given id.
	 */
	public PortalCertificateAddress update(PortalCertificateAddress updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the portalcertificateaddresss in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the portalcertificateaddress.
	 */

	public long countAll();


    public Page<PortalCertificateAddress> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

