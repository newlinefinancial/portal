/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.portal.platform.ModelData;
import com.portal.platform.ModelDataId;

/**
 * Service object for domain model class ModelData.
 *
 * @see {@link ModelData}
 */
public interface ModelDataService {


	/**
	 * Finds ModelData by id.
	 *
	 * @param modelDataId The id of the wanted ModelData.
	 * @return The found ModelData. If no ModelData is found, this method returns null.
	 */
	ModelData getById(ModelDataId modelDataId) throws EntityNotFoundException;

	/**
	 * Finds all ModelDatas.
	 *
	 * @return A list of ModelDatas.
	 */
    @Deprecated
	Page<ModelData> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all ModelDatas.
	 * @return A list of ModelDatas.
	 */
    Page<ModelData> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the ModelDatas in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the ModelData.
	 */
	long count(String query);

    Page<ModelData> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

