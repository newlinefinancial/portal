/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.portal.platform.*;

/**
 * Service object for domain model class PortalAuctionTitle.
 * @see com.portal.platform.PortalAuctionTitle
 */

public interface PortalAuctionTitleService {
   /**
	 * Creates a new portalauctiontitle.
	 * 
	 * @param created
	 *            The information of the created portalauctiontitle.
	 * @return The created portalauctiontitle.
	 */
	public PortalAuctionTitle create(PortalAuctionTitle created);

	/**
	 * Deletes a portalauctiontitle.
	 * 
	 * @param portalauctiontitleId
	 *            The id of the deleted portalauctiontitle.
	 * @return The deleted portalauctiontitle.
	 * @throws EntityNotFoundException
	 *             if no portalauctiontitle is found with the given id.
	 */
	public PortalAuctionTitle delete(PortalAuctionTitleId portalauctiontitleId) throws EntityNotFoundException;

	/**
	 * Finds all portalauctiontitles.
	 * 
	 * @return A list of portalauctiontitles.
	 */
	public Page<PortalAuctionTitle> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<PortalAuctionTitle> findAll(Pageable pageable);
	
	/**
	 * Finds portalauctiontitle by id.
	 * 
	 * @param id
	 *            The id of the wanted portalauctiontitle.
	 * @return The found portalauctiontitle. If no portalauctiontitle is found, this method returns
	 *         null.
	 */
	public PortalAuctionTitle findById(PortalAuctionTitleId id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a portalauctiontitle.
	 * 
	 * @param updated
	 *            The information of the updated portalauctiontitle.
	 * @return The updated portalauctiontitle.
	 * @throws EntityNotFoundException
	 *             if no portalauctiontitle is found with given id.
	 */
	public PortalAuctionTitle update(PortalAuctionTitle updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the portalauctiontitles in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the portalauctiontitle.
	 */

	public long countAll();


    public Page<PortalAuctionTitle> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

