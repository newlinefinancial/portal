/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.portal.platform.*;

/**
 * Service object for domain model class PortalCertificateNote.
 * @see com.portal.platform.PortalCertificateNote
 */

public interface PortalCertificateNoteService {
   /**
	 * Creates a new portalcertificatenote.
	 * 
	 * @param created
	 *            The information of the created portalcertificatenote.
	 * @return The created portalcertificatenote.
	 */
	public PortalCertificateNote create(PortalCertificateNote created);

	/**
	 * Deletes a portalcertificatenote.
	 * 
	 * @param portalcertificatenoteId
	 *            The id of the deleted portalcertificatenote.
	 * @return The deleted portalcertificatenote.
	 * @throws EntityNotFoundException
	 *             if no portalcertificatenote is found with the given id.
	 */
	public PortalCertificateNote delete(PortalCertificateNoteId portalcertificatenoteId) throws EntityNotFoundException;

	/**
	 * Finds all portalcertificatenotes.
	 * 
	 * @return A list of portalcertificatenotes.
	 */
	public Page<PortalCertificateNote> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<PortalCertificateNote> findAll(Pageable pageable);
	
	/**
	 * Finds portalcertificatenote by id.
	 * 
	 * @param id
	 *            The id of the wanted portalcertificatenote.
	 * @return The found portalcertificatenote. If no portalcertificatenote is found, this method returns
	 *         null.
	 */
	public PortalCertificateNote findById(PortalCertificateNoteId id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a portalcertificatenote.
	 * 
	 * @param updated
	 *            The information of the updated portalcertificatenote.
	 * @return The updated portalcertificatenote.
	 * @throws EntityNotFoundException
	 *             if no portalcertificatenote is found with given id.
	 */
	public PortalCertificateNote update(PortalCertificateNote updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the portalcertificatenotes in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the portalcertificatenote.
	 */

	public long countAll();


    public Page<PortalCertificateNote> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

