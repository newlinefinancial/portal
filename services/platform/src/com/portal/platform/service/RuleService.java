/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.portal.platform.*;

/**
 * Service object for domain model class Rule.
 * @see com.portal.platform.Rule
 */

public interface RuleService {
   /**
	 * Creates a new rule.
	 * 
	 * @param created
	 *            The information of the created rule.
	 * @return The created rule.
	 */
	public Rule create(Rule created);

	/**
	 * Deletes a rule.
	 * 
	 * @param ruleId
	 *            The id of the deleted rule.
	 * @return The deleted rule.
	 * @throws EntityNotFoundException
	 *             if no rule is found with the given id.
	 */
	public Rule delete(Integer ruleId) throws EntityNotFoundException;

	/**
	 * Finds all rules.
	 * 
	 * @return A list of rules.
	 */
	public Page<Rule> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<Rule> findAll(Pageable pageable);
	
	/**
	 * Finds rule by id.
	 * 
	 * @param id
	 *            The id of the wanted rule.
	 * @return The found rule. If no rule is found, this method returns
	 *         null.
	 */
	public Rule findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a rule.
	 * 
	 * @param updated
	 *            The information of the updated rule.
	 * @return The updated rule.
	 * @throws EntityNotFoundException
	 *             if no rule is found with given id.
	 */
	public Rule update(Rule updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the rules in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the rule.
	 */

	public long countAll();


    public Page<Rule> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

