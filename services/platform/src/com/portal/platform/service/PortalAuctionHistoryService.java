/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.portal.platform.*;

/**
 * Service object for domain model class PortalAuctionHistory.
 * @see com.portal.platform.PortalAuctionHistory
 */

public interface PortalAuctionHistoryService {
   /**
	 * Creates a new portalauctionhistory.
	 * 
	 * @param created
	 *            The information of the created portalauctionhistory.
	 * @return The created portalauctionhistory.
	 */
	public PortalAuctionHistory create(PortalAuctionHistory created);

	/**
	 * Deletes a portalauctionhistory.
	 * 
	 * @param portalauctionhistoryId
	 *            The id of the deleted portalauctionhistory.
	 * @return The deleted portalauctionhistory.
	 * @throws EntityNotFoundException
	 *             if no portalauctionhistory is found with the given id.
	 */
	public PortalAuctionHistory delete(PortalAuctionHistoryId portalauctionhistoryId) throws EntityNotFoundException;

	/**
	 * Finds all portalauctionhistorys.
	 * 
	 * @return A list of portalauctionhistorys.
	 */
	public Page<PortalAuctionHistory> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<PortalAuctionHistory> findAll(Pageable pageable);
	
	/**
	 * Finds portalauctionhistory by id.
	 * 
	 * @param id
	 *            The id of the wanted portalauctionhistory.
	 * @return The found portalauctionhistory. If no portalauctionhistory is found, this method returns
	 *         null.
	 */
	public PortalAuctionHistory findById(PortalAuctionHistoryId id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a portalauctionhistory.
	 * 
	 * @param updated
	 *            The information of the updated portalauctionhistory.
	 * @return The updated portalauctionhistory.
	 * @throws EntityNotFoundException
	 *             if no portalauctionhistory is found with given id.
	 */
	public PortalAuctionHistory update(PortalAuctionHistory updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the portalauctionhistorys in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the portalauctionhistory.
	 */

	public long countAll();


    public Page<PortalAuctionHistory> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

