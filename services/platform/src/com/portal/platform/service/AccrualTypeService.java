/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.portal.platform.*;

/**
 * Service object for domain model class AccrualType.
 * @see com.portal.platform.AccrualType
 */

public interface AccrualTypeService {
   /**
	 * Creates a new accrualtype.
	 * 
	 * @param created
	 *            The information of the created accrualtype.
	 * @return The created accrualtype.
	 */
	public AccrualType create(AccrualType created);

	/**
	 * Deletes a accrualtype.
	 * 
	 * @param accrualtypeId
	 *            The id of the deleted accrualtype.
	 * @return The deleted accrualtype.
	 * @throws EntityNotFoundException
	 *             if no accrualtype is found with the given id.
	 */
	public AccrualType delete(Integer accrualtypeId) throws EntityNotFoundException;

	/**
	 * Finds all accrualtypes.
	 * 
	 * @return A list of accrualtypes.
	 */
	public Page<AccrualType> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<AccrualType> findAll(Pageable pageable);
	
	/**
	 * Finds accrualtype by id.
	 * 
	 * @param id
	 *            The id of the wanted accrualtype.
	 * @return The found accrualtype. If no accrualtype is found, this method returns
	 *         null.
	 */
	public AccrualType findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a accrualtype.
	 * 
	 * @param updated
	 *            The information of the updated accrualtype.
	 * @return The updated accrualtype.
	 * @throws EntityNotFoundException
	 *             if no accrualtype is found with given id.
	 */
	public AccrualType update(AccrualType updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the accrualtypes in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the accrualtype.
	 */

	public long countAll();


    public Page<AccrualType> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

