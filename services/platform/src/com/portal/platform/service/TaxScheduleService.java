/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.portal.platform.*;

/**
 * Service object for domain model class TaxSchedule.
 * @see com.portal.platform.TaxSchedule
 */

public interface TaxScheduleService {
   /**
	 * Creates a new taxschedule.
	 * 
	 * @param created
	 *            The information of the created taxschedule.
	 * @return The created taxschedule.
	 */
	public TaxSchedule create(TaxSchedule created);

	/**
	 * Deletes a taxschedule.
	 * 
	 * @param taxscheduleId
	 *            The id of the deleted taxschedule.
	 * @return The deleted taxschedule.
	 * @throws EntityNotFoundException
	 *             if no taxschedule is found with the given id.
	 */
	public TaxSchedule delete(Integer taxscheduleId) throws EntityNotFoundException;

	/**
	 * Finds all taxschedules.
	 * 
	 * @return A list of taxschedules.
	 */
	public Page<TaxSchedule> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<TaxSchedule> findAll(Pageable pageable);
	
	/**
	 * Finds taxschedule by id.
	 * 
	 * @param id
	 *            The id of the wanted taxschedule.
	 * @return The found taxschedule. If no taxschedule is found, this method returns
	 *         null.
	 */
	public TaxSchedule findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a taxschedule.
	 * 
	 * @param updated
	 *            The information of the updated taxschedule.
	 * @return The updated taxschedule.
	 * @throws EntityNotFoundException
	 *             if no taxschedule is found with given id.
	 */
	public TaxSchedule update(TaxSchedule updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the taxschedules in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the taxschedule.
	 */

	public long countAll();


    public Page<TaxSchedule> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

