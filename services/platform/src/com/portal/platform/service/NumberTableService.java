/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.portal.platform.*;

/**
 * Service object for domain model class NumberTable.
 * @see com.portal.platform.NumberTable
 */

public interface NumberTableService {
   /**
	 * Creates a new numbertable.
	 * 
	 * @param created
	 *            The information of the created numbertable.
	 * @return The created numbertable.
	 */
	public NumberTable create(NumberTable created);

	/**
	 * Deletes a numbertable.
	 * 
	 * @param numbertableId
	 *            The id of the deleted numbertable.
	 * @return The deleted numbertable.
	 * @throws EntityNotFoundException
	 *             if no numbertable is found with the given id.
	 */
	public NumberTable delete(Integer numbertableId) throws EntityNotFoundException;

	/**
	 * Finds all numbertables.
	 * 
	 * @return A list of numbertables.
	 */
	public Page<NumberTable> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<NumberTable> findAll(Pageable pageable);
	
	/**
	 * Finds numbertable by id.
	 * 
	 * @param id
	 *            The id of the wanted numbertable.
	 * @return The found numbertable. If no numbertable is found, this method returns
	 *         null.
	 */
	public NumberTable findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a numbertable.
	 * 
	 * @param updated
	 *            The information of the updated numbertable.
	 * @return The updated numbertable.
	 * @throws EntityNotFoundException
	 *             if no numbertable is found with given id.
	 */
	public NumberTable update(NumberTable updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the numbertables in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the numbertable.
	 */

	public long countAll();


    public Page<NumberTable> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

