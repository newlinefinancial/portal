/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.portal.platform.*;

/**
 * Service object for domain model class ModelHistoricalAuctions.
 * @see com.portal.platform.ModelHistoricalAuctions
 */

public interface ModelHistoricalAuctionsService {
   /**
	 * Creates a new modelhistoricalauctions.
	 * 
	 * @param created
	 *            The information of the created modelhistoricalauctions.
	 * @return The created modelhistoricalauctions.
	 */
	public ModelHistoricalAuctions create(ModelHistoricalAuctions created);

	/**
	 * Deletes a modelhistoricalauctions.
	 * 
	 * @param modelhistoricalauctionsId
	 *            The id of the deleted modelhistoricalauctions.
	 * @return The deleted modelhistoricalauctions.
	 * @throws EntityNotFoundException
	 *             if no modelhistoricalauctions is found with the given id.
	 */
	public ModelHistoricalAuctions delete(ModelHistoricalAuctionsId modelhistoricalauctionsId) throws EntityNotFoundException;

	/**
	 * Finds all modelhistoricalauctionss.
	 * 
	 * @return A list of modelhistoricalauctionss.
	 */
	public Page<ModelHistoricalAuctions> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<ModelHistoricalAuctions> findAll(Pageable pageable);
	
	/**
	 * Finds modelhistoricalauctions by id.
	 * 
	 * @param id
	 *            The id of the wanted modelhistoricalauctions.
	 * @return The found modelhistoricalauctions. If no modelhistoricalauctions is found, this method returns
	 *         null.
	 */
	public ModelHistoricalAuctions findById(ModelHistoricalAuctionsId id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a modelhistoricalauctions.
	 * 
	 * @param updated
	 *            The information of the updated modelhistoricalauctions.
	 * @return The updated modelhistoricalauctions.
	 * @throws EntityNotFoundException
	 *             if no modelhistoricalauctions is found with given id.
	 */
	public ModelHistoricalAuctions update(ModelHistoricalAuctions updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the modelhistoricalauctionss in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the modelhistoricalauctions.
	 */

	public long countAll();


    public Page<ModelHistoricalAuctions> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

