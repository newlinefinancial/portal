/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.portal.platform.*;

/**
 * Service object for domain model class Grade.
 * @see com.portal.platform.Grade
 */

public interface GradeService {
   /**
	 * Creates a new grade.
	 * 
	 * @param created
	 *            The information of the created grade.
	 * @return The created grade.
	 */
	public Grade create(Grade created);

	/**
	 * Deletes a grade.
	 * 
	 * @param gradeId
	 *            The id of the deleted grade.
	 * @return The deleted grade.
	 * @throws EntityNotFoundException
	 *             if no grade is found with the given id.
	 */
	public Grade delete(Integer gradeId) throws EntityNotFoundException;

	/**
	 * Finds all grades.
	 * 
	 * @return A list of grades.
	 */
	public Page<Grade> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<Grade> findAll(Pageable pageable);
	
	/**
	 * Finds grade by id.
	 * 
	 * @param id
	 *            The id of the wanted grade.
	 * @return The found grade. If no grade is found, this method returns
	 *         null.
	 */
	public Grade findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a grade.
	 * 
	 * @param updated
	 *            The information of the updated grade.
	 * @return The updated grade.
	 * @throws EntityNotFoundException
	 *             if no grade is found with given id.
	 */
	public Grade update(Grade updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the grades in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the grade.
	 */

	public long countAll();


    public Page<Grade> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

