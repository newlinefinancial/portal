/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.portal.platform.PortalGradeNote;
import com.portal.platform.PortalGradeNoteId;

/**
 * Service object for domain model class PortalGradeNote.
 *
 * @see {@link PortalGradeNote}
 */
public interface PortalGradeNoteService {


	/**
	 * Finds PortalGradeNote by id.
	 *
	 * @param portalGradeNoteId The id of the wanted PortalGradeNote.
	 * @return The found PortalGradeNote. If no PortalGradeNote is found, this method returns null.
	 */
	PortalGradeNote getById(PortalGradeNoteId portalGradeNoteId) throws EntityNotFoundException;

	/**
	 * Finds all PortalGradeNotes.
	 *
	 * @return A list of PortalGradeNotes.
	 */
    @Deprecated
	Page<PortalGradeNote> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all PortalGradeNotes.
	 * @return A list of PortalGradeNotes.
	 */
    Page<PortalGradeNote> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the PortalGradeNotes in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the PortalGradeNote.
	 */
	long count(String query);

    Page<PortalGradeNote> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

