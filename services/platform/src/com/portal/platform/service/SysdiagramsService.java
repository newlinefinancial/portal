/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.portal.platform.*;

/**
 * Service object for domain model class Sysdiagrams.
 * @see com.portal.platform.Sysdiagrams
 */

public interface SysdiagramsService {
   /**
	 * Creates a new sysdiagrams.
	 * 
	 * @param created
	 *            The information of the created sysdiagrams.
	 * @return The created sysdiagrams.
	 */
	public Sysdiagrams create(Sysdiagrams created);

	/**
	 * Deletes a sysdiagrams.
	 * 
	 * @param sysdiagramsId
	 *            The id of the deleted sysdiagrams.
	 * @return The deleted sysdiagrams.
	 * @throws EntityNotFoundException
	 *             if no sysdiagrams is found with the given id.
	 */
	public Sysdiagrams delete(Integer sysdiagramsId) throws EntityNotFoundException;

	/**
	 * Finds all sysdiagramss.
	 * 
	 * @return A list of sysdiagramss.
	 */
	public Page<Sysdiagrams> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<Sysdiagrams> findAll(Pageable pageable);
	
	/**
	 * Finds sysdiagrams by id.
	 * 
	 * @param id
	 *            The id of the wanted sysdiagrams.
	 * @return The found sysdiagrams. If no sysdiagrams is found, this method returns
	 *         null.
	 */
	public Sysdiagrams findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a sysdiagrams.
	 * 
	 * @param updated
	 *            The information of the updated sysdiagrams.
	 * @return The updated sysdiagrams.
	 * @throws EntityNotFoundException
	 *             if no sysdiagrams is found with given id.
	 */
	public Sysdiagrams update(Sysdiagrams updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the sysdiagramss in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the sysdiagrams.
	 */

	public long countAll();


    public Page<Sysdiagrams> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

