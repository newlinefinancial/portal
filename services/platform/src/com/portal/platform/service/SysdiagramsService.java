/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;

import com.portal.platform.Sysdiagrams;

/**
 * Service object for domain model class Sysdiagrams.
 *
 * @see {@link Sysdiagrams}
 */
public interface SysdiagramsService {

    /**
     * Creates a new Sysdiagrams.
     *
     * @param sysdiagrams The information of the created CompositeTable.
     * @return The created Sysdiagrams.
     */
	Sysdiagrams create(Sysdiagrams sysdiagrams);


	/**
	 * Finds Sysdiagrams by id.
	 *
	 * @param sysdiagramsId The id of the wanted Sysdiagrams.
	 * @return The found Sysdiagrams. If no Sysdiagrams is found, this method returns null.
	 */
	Sysdiagrams getById(Integer sysdiagramsId) throws EntityNotFoundException;

	/**
	 * Updates the information of a Sysdiagrams.
	 *
	 * @param sysdiagrams The information of the updated Sysdiagrams.
	 * @return The updated Sysdiagrams.
     *
	 * @throws EntityNotFoundException if no Sysdiagrams is found with given id.
	 */
	Sysdiagrams update(Sysdiagrams sysdiagrams) throws EntityNotFoundException;

    /**
	 * Deletes a Sysdiagrams.
	 *
	 * @param sysdiagramsId The id of the deleted Sysdiagrams.
	 * @return The deleted Sysdiagrams.
     *
	 * @throws EntityNotFoundException if no Sysdiagrams is found with the given id.
	 */
	Sysdiagrams delete(Integer sysdiagramsId) throws EntityNotFoundException;

	/**
	 * Finds all Sysdiagrams.
	 *
	 * @return A list of Sysdiagrams.
	 */
    @Deprecated
	Page<Sysdiagrams> findAll(QueryFilter[] queryFilters, Pageable pageable);

    /**
	 * Finds all Sysdiagrams.
	 * @return A list of Sysdiagrams.
	 */
    Page<Sysdiagrams> findAll(String query, Pageable pageable);

    Downloadable export(ExportType exportType, String query, Pageable pageable);

	/**
	 * Retrieve the count of the Sysdiagrams in the repository with matching query.
     *
     * @param query query to filter results.
	 * @return The count of the Sysdiagrams.
	 */
	long count(String query);

    Page<Sysdiagrams> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);

}

