/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.portal.platform.*;

/**
 * Service object for domain model class TitleTransaction.
 * @see com.portal.platform.TitleTransaction
 */

public interface TitleTransactionService {
   /**
	 * Creates a new titletransaction.
	 * 
	 * @param created
	 *            The information of the created titletransaction.
	 * @return The created titletransaction.
	 */
	public TitleTransaction create(TitleTransaction created);

	/**
	 * Deletes a titletransaction.
	 * 
	 * @param titletransactionId
	 *            The id of the deleted titletransaction.
	 * @return The deleted titletransaction.
	 * @throws EntityNotFoundException
	 *             if no titletransaction is found with the given id.
	 */
	public TitleTransaction delete(Integer titletransactionId) throws EntityNotFoundException;

	/**
	 * Finds all titletransactions.
	 * 
	 * @return A list of titletransactions.
	 */
	public Page<TitleTransaction> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<TitleTransaction> findAll(Pageable pageable);
	
	/**
	 * Finds titletransaction by id.
	 * 
	 * @param id
	 *            The id of the wanted titletransaction.
	 * @return The found titletransaction. If no titletransaction is found, this method returns
	 *         null.
	 */
	public TitleTransaction findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a titletransaction.
	 * 
	 * @param updated
	 *            The information of the updated titletransaction.
	 * @return The updated titletransaction.
	 * @throws EntityNotFoundException
	 *             if no titletransaction is found with given id.
	 */
	public TitleTransaction update(TitleTransaction updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the titletransactions in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the titletransaction.
	 */

	public long countAll();


    public Page<TitleTransaction> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

