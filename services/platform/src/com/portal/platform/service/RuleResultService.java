/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.portal.platform.*;

/**
 * Service object for domain model class RuleResult.
 * @see com.portal.platform.RuleResult
 */

public interface RuleResultService {
   /**
	 * Creates a new ruleresult.
	 * 
	 * @param created
	 *            The information of the created ruleresult.
	 * @return The created ruleresult.
	 */
	public RuleResult create(RuleResult created);

	/**
	 * Deletes a ruleresult.
	 * 
	 * @param ruleresultId
	 *            The id of the deleted ruleresult.
	 * @return The deleted ruleresult.
	 * @throws EntityNotFoundException
	 *             if no ruleresult is found with the given id.
	 */
	public RuleResult delete(Integer ruleresultId) throws EntityNotFoundException;

	/**
	 * Finds all ruleresults.
	 * 
	 * @return A list of ruleresults.
	 */
	public Page<RuleResult> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<RuleResult> findAll(Pageable pageable);
	
	/**
	 * Finds ruleresult by id.
	 * 
	 * @param id
	 *            The id of the wanted ruleresult.
	 * @return The found ruleresult. If no ruleresult is found, this method returns
	 *         null.
	 */
	public RuleResult findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a ruleresult.
	 * 
	 * @param updated
	 *            The information of the updated ruleresult.
	 * @return The updated ruleresult.
	 * @throws EntityNotFoundException
	 *             if no ruleresult is found with given id.
	 */
	public RuleResult update(RuleResult updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the ruleresults in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the ruleresult.
	 */

	public long countAll();


    public Page<RuleResult> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

