/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.portal.platform.*;

/**
 * Service object for domain model class InterestType.
 * @see com.portal.platform.InterestType
 */

public interface InterestTypeService {
   /**
	 * Creates a new interesttype.
	 * 
	 * @param created
	 *            The information of the created interesttype.
	 * @return The created interesttype.
	 */
	public InterestType create(InterestType created);

	/**
	 * Deletes a interesttype.
	 * 
	 * @param interesttypeId
	 *            The id of the deleted interesttype.
	 * @return The deleted interesttype.
	 * @throws EntityNotFoundException
	 *             if no interesttype is found with the given id.
	 */
	public InterestType delete(String interesttypeId) throws EntityNotFoundException;

	/**
	 * Finds all interesttypes.
	 * 
	 * @return A list of interesttypes.
	 */
	public Page<InterestType> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<InterestType> findAll(Pageable pageable);
	
	/**
	 * Finds interesttype by id.
	 * 
	 * @param id
	 *            The id of the wanted interesttype.
	 * @return The found interesttype. If no interesttype is found, this method returns
	 *         null.
	 */
	public InterestType findById(String id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a interesttype.
	 * 
	 * @param updated
	 *            The information of the updated interesttype.
	 * @return The updated interesttype.
	 * @throws EntityNotFoundException
	 *             if no interesttype is found with given id.
	 */
	public InterestType update(InterestType updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the interesttypes in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the interesttype.
	 */

	public long countAll();


    public Page<InterestType> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

