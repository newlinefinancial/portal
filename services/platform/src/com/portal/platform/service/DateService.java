/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.portal.platform.*;

/**
 * Service object for domain model class Date.
 * @see com.portal.platform.Date
 */

public interface DateService {
   /**
	 * Creates a new date.
	 * 
	 * @param created
	 *            The information of the created date.
	 * @return The created date.
	 */
	public Date create(Date created);

	/**
	 * Deletes a date.
	 * 
	 * @param dateId
	 *            The id of the deleted date.
	 * @return The deleted date.
	 * @throws EntityNotFoundException
	 *             if no date is found with the given id.
	 */
	public Date delete(java.util.Date dateId) throws EntityNotFoundException;

	/**
	 * Finds all dates.
	 * 
	 * @return A list of dates.
	 */
	public Page<Date> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<Date> findAll(Pageable pageable);
	
	/**
	 * Finds date by id.
	 * 
	 * @param id
	 *            The id of the wanted date.
	 * @return The found date. If no date is found, this method returns
	 *         null.
	 */
	public Date findById(java.util.Date id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a date.
	 * 
	 * @param updated
	 *            The information of the updated date.
	 * @return The updated date.
	 * @throws EntityNotFoundException
	 *             if no date is found with given id.
	 */
	public Date update(Date updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the dates in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the date.
	 */

	public long countAll();


    public Page<Date> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

