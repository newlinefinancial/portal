/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.portal.platform.*;

/**
 * Service object for domain model class Balance.
 * @see com.portal.platform.Balance
 */

public interface BalanceService {
   /**
	 * Creates a new balance.
	 * 
	 * @param created
	 *            The information of the created balance.
	 * @return The created balance.
	 */
	public Balance create(Balance created);

	/**
	 * Deletes a balance.
	 * 
	 * @param balanceId
	 *            The id of the deleted balance.
	 * @return The deleted balance.
	 * @throws EntityNotFoundException
	 *             if no balance is found with the given id.
	 */
	public Balance delete(BalanceId balanceId) throws EntityNotFoundException;

	/**
	 * Finds all balances.
	 * 
	 * @return A list of balances.
	 */
	public Page<Balance> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<Balance> findAll(Pageable pageable);
	
	/**
	 * Finds balance by id.
	 * 
	 * @param id
	 *            The id of the wanted balance.
	 * @return The found balance. If no balance is found, this method returns
	 *         null.
	 */
	public Balance findById(BalanceId id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a balance.
	 * 
	 * @param updated
	 *            The information of the updated balance.
	 * @return The updated balance.
	 * @throws EntityNotFoundException
	 *             if no balance is found with given id.
	 */
	public Balance update(Balance updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the balances in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the balance.
	 */

	public long countAll();


    public Page<Balance> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

