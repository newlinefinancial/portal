/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.portal.platform.*;

/**
 * Service object for domain model class Matter.
 * @see com.portal.platform.Matter
 */

public interface MatterService {
   /**
	 * Creates a new matter.
	 * 
	 * @param created
	 *            The information of the created matter.
	 * @return The created matter.
	 */
	public Matter create(Matter created);

	/**
	 * Deletes a matter.
	 * 
	 * @param matterId
	 *            The id of the deleted matter.
	 * @return The deleted matter.
	 * @throws EntityNotFoundException
	 *             if no matter is found with the given id.
	 */
	public Matter delete(Integer matterId) throws EntityNotFoundException;

	/**
	 * Finds all matters.
	 * 
	 * @return A list of matters.
	 */
	public Page<Matter> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<Matter> findAll(Pageable pageable);
	
	/**
	 * Finds matter by id.
	 * 
	 * @param id
	 *            The id of the wanted matter.
	 * @return The found matter. If no matter is found, this method returns
	 *         null.
	 */
	public Matter findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a matter.
	 * 
	 * @param updated
	 *            The information of the updated matter.
	 * @return The updated matter.
	 * @throws EntityNotFoundException
	 *             if no matter is found with given id.
	 */
	public Matter update(Matter updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the matters in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the matter.
	 */

	public long countAll();


    public Page<Matter> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

