/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.portal.platform.*;

/**
 * Service object for domain model class Score.
 * @see com.portal.platform.Score
 */

public interface ScoreService {
   /**
	 * Creates a new score.
	 * 
	 * @param created
	 *            The information of the created score.
	 * @return The created score.
	 */
	public Score create(Score created);

	/**
	 * Deletes a score.
	 * 
	 * @param scoreId
	 *            The id of the deleted score.
	 * @return The deleted score.
	 * @throws EntityNotFoundException
	 *             if no score is found with the given id.
	 */
	public Score delete(Integer scoreId) throws EntityNotFoundException;

	/**
	 * Finds all scores.
	 * 
	 * @return A list of scores.
	 */
	public Page<Score> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<Score> findAll(Pageable pageable);
	
	/**
	 * Finds score by id.
	 * 
	 * @param id
	 *            The id of the wanted score.
	 * @return The found score. If no score is found, this method returns
	 *         null.
	 */
	public Score findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a score.
	 * 
	 * @param updated
	 *            The information of the updated score.
	 * @return The updated score.
	 * @throws EntityNotFoundException
	 *             if no score is found with given id.
	 */
	public Score update(Score updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the scores in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the score.
	 */

	public long countAll();


    public Page<Score> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

