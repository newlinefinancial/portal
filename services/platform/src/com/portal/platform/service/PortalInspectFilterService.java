/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.portal.platform.*;

/**
 * Service object for domain model class PortalInspectFilter.
 * @see com.portal.platform.PortalInspectFilter
 */

public interface PortalInspectFilterService {
   /**
	 * Creates a new portalinspectfilter.
	 * 
	 * @param created
	 *            The information of the created portalinspectfilter.
	 * @return The created portalinspectfilter.
	 */
	public PortalInspectFilter create(PortalInspectFilter created);

	/**
	 * Deletes a portalinspectfilter.
	 * 
	 * @param portalinspectfilterId
	 *            The id of the deleted portalinspectfilter.
	 * @return The deleted portalinspectfilter.
	 * @throws EntityNotFoundException
	 *             if no portalinspectfilter is found with the given id.
	 */
	public PortalInspectFilter delete(PortalInspectFilterId portalinspectfilterId) throws EntityNotFoundException;

	/**
	 * Finds all portalinspectfilters.
	 * 
	 * @return A list of portalinspectfilters.
	 */
	public Page<PortalInspectFilter> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<PortalInspectFilter> findAll(Pageable pageable);
	
	/**
	 * Finds portalinspectfilter by id.
	 * 
	 * @param id
	 *            The id of the wanted portalinspectfilter.
	 * @return The found portalinspectfilter. If no portalinspectfilter is found, this method returns
	 *         null.
	 */
	public PortalInspectFilter findById(PortalInspectFilterId id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a portalinspectfilter.
	 * 
	 * @param updated
	 *            The information of the updated portalinspectfilter.
	 * @return The updated portalinspectfilter.
	 * @throws EntityNotFoundException
	 *             if no portalinspectfilter is found with given id.
	 */
	public PortalInspectFilter update(PortalInspectFilter updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the portalinspectfilters in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the portalinspectfilter.
	 */

	public long countAll();


    public Page<PortalInspectFilter> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

