/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.portal.platform.*;

/**
 * Service object for domain model class Certificate.
 * @see com.portal.platform.Certificate
 */

public interface CertificateService {
   /**
	 * Creates a new certificate.
	 * 
	 * @param created
	 *            The information of the created certificate.
	 * @return The created certificate.
	 */
	public Certificate create(Certificate created);

	/**
	 * Deletes a certificate.
	 * 
	 * @param certificateId
	 *            The id of the deleted certificate.
	 * @return The deleted certificate.
	 * @throws EntityNotFoundException
	 *             if no certificate is found with the given id.
	 */
	public Certificate delete(Integer certificateId) throws EntityNotFoundException;

	/**
	 * Finds all certificates.
	 * 
	 * @return A list of certificates.
	 */
	public Page<Certificate> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<Certificate> findAll(Pageable pageable);
	
	/**
	 * Finds certificate by id.
	 * 
	 * @param id
	 *            The id of the wanted certificate.
	 * @return The found certificate. If no certificate is found, this method returns
	 *         null.
	 */
	public Certificate findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a certificate.
	 * 
	 * @param updated
	 *            The information of the updated certificate.
	 * @return The updated certificate.
	 * @throws EntityNotFoundException
	 *             if no certificate is found with given id.
	 */
	public Certificate update(Certificate updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the certificates in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the certificate.
	 */

	public long countAll();


    public Page<Certificate> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

