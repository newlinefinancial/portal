/*Copyright (c) 2016-2017 newlinefinancial.com All Rights Reserved.
 This software is the confidential and proprietary information of newlinefinancial.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with newlinefinancial.com*/

package com.portal.platform.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.portal.platform.*;

/**
 * Service object for domain model class DisbursementType.
 * @see com.portal.platform.DisbursementType
 */

public interface DisbursementTypeService {
   /**
	 * Creates a new disbursementtype.
	 * 
	 * @param created
	 *            The information of the created disbursementtype.
	 * @return The created disbursementtype.
	 */
	public DisbursementType create(DisbursementType created);

	/**
	 * Deletes a disbursementtype.
	 * 
	 * @param disbursementtypeId
	 *            The id of the deleted disbursementtype.
	 * @return The deleted disbursementtype.
	 * @throws EntityNotFoundException
	 *             if no disbursementtype is found with the given id.
	 */
	public DisbursementType delete(Integer disbursementtypeId) throws EntityNotFoundException;

	/**
	 * Finds all disbursementtypes.
	 * 
	 * @return A list of disbursementtypes.
	 */
	public Page<DisbursementType> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<DisbursementType> findAll(Pageable pageable);
	
	/**
	 * Finds disbursementtype by id.
	 * 
	 * @param id
	 *            The id of the wanted disbursementtype.
	 * @return The found disbursementtype. If no disbursementtype is found, this method returns
	 *         null.
	 */
	public DisbursementType findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a disbursementtype.
	 * 
	 * @param updated
	 *            The information of the updated disbursementtype.
	 * @return The updated disbursementtype.
	 * @throws EntityNotFoundException
	 *             if no disbursementtype is found with given id.
	 */
	public DisbursementType update(DisbursementType updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the disbursementtypes in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the disbursementtype.
	 */

	public long countAll();


    public Page<DisbursementType> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

